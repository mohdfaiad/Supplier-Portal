//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace com.Sconit.Service.SendMail {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SendMailV2Soap", Namespace="http://tempuri.org/")]
    public partial class SendMailV2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private SecurityHeader securityHeaderValueField;
        
        private System.Threading.SendOrPostCallback SendEmailAndUpAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailAndAttachmentsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SendMailV2() {
            this.Url = global::com.Sconit.Service.Properties.Settings.Default.com_Sconit_Service_SendMail_SendMailV2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SecurityHeader SecurityHeaderValue {
            get {
                return this.securityHeaderValueField;
            }
            set {
                this.securityHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event SendEmailAndUpAttachmentsCompletedEventHandler SendEmailAndUpAttachmentsCompleted;
        
        /// <remarks/>
        public event SendEmailAndAttachmentsCompletedEventHandler SendEmailAndAttachmentsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmail(string strReceiver, string strSubject, string strContent) {
            this.Invoke("SendEmail", new object[] {
                        strReceiver,
                        strSubject,
                        strContent});
        }
        
        /// <remarks/>
        public void SendEmailAsync(string strReceiver, string strSubject, string strContent) {
            this.SendEmailAsync(strReceiver, strSubject, strContent, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string strReceiver, string strSubject, string strContent, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        strReceiver,
                        strSubject,
                        strContent}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmailAndUpAttachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmailAndUpAttachments(string EmailAddress, string CCEmailAddress, string title, string body, UpAttachments[] attachments, bool onebyone, int senderNo) {
            this.Invoke("SendEmailAndUpAttachments", new object[] {
                        EmailAddress,
                        CCEmailAddress,
                        title,
                        body,
                        attachments,
                        onebyone,
                        senderNo});
        }
        
        /// <remarks/>
        public void SendEmailAndUpAttachmentsAsync(string EmailAddress, string CCEmailAddress, string title, string body, UpAttachments[] attachments, bool onebyone, int senderNo) {
            this.SendEmailAndUpAttachmentsAsync(EmailAddress, CCEmailAddress, title, body, attachments, onebyone, senderNo, null);
        }
        
        /// <remarks/>
        public void SendEmailAndUpAttachmentsAsync(string EmailAddress, string CCEmailAddress, string title, string body, UpAttachments[] attachments, bool onebyone, int senderNo, object userState) {
            if ((this.SendEmailAndUpAttachmentsOperationCompleted == null)) {
                this.SendEmailAndUpAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailAndUpAttachmentsOperationCompleted);
            }
            this.InvokeAsync("SendEmailAndUpAttachments", new object[] {
                        EmailAddress,
                        CCEmailAddress,
                        title,
                        body,
                        attachments,
                        onebyone,
                        senderNo}, this.SendEmailAndUpAttachmentsOperationCompleted, userState);
        }
        
        private void OnSendEmailAndUpAttachmentsOperationCompleted(object arg) {
            if ((this.SendEmailAndUpAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailAndUpAttachmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmailAndAttachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmailAndAttachments(string EmailAddress, string CCEmailAddress, string title, string body, UpAttachments[] attachments, bool onebyone) {
            this.Invoke("SendEmailAndAttachments", new object[] {
                        EmailAddress,
                        CCEmailAddress,
                        title,
                        body,
                        attachments,
                        onebyone});
        }
        
        /// <remarks/>
        public void SendEmailAndAttachmentsAsync(string EmailAddress, string CCEmailAddress, string title, string body, UpAttachments[] attachments, bool onebyone) {
            this.SendEmailAndAttachmentsAsync(EmailAddress, CCEmailAddress, title, body, attachments, onebyone, null);
        }
        
        /// <remarks/>
        public void SendEmailAndAttachmentsAsync(string EmailAddress, string CCEmailAddress, string title, string body, UpAttachments[] attachments, bool onebyone, object userState) {
            if ((this.SendEmailAndAttachmentsOperationCompleted == null)) {
                this.SendEmailAndAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailAndAttachmentsOperationCompleted);
            }
            this.InvokeAsync("SendEmailAndAttachments", new object[] {
                        EmailAddress,
                        CCEmailAddress,
                        title,
                        body,
                        attachments,
                        onebyone}, this.SendEmailAndAttachmentsOperationCompleted, userState);
        }
        
        private void OnSendEmailAndAttachmentsOperationCompleted(object arg) {
            if ((this.SendEmailAndAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailAndAttachmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class SecurityHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string userPasswordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UpAttachments {
        
        private string fileNameField;
        
        private string fileContentField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendEmailAndUpAttachmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendEmailAndAttachmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591