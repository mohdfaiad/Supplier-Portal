//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace com.Sconit.Service.SAPService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SAPServiceSoap", Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SAPEntityBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[][]))]
    public partial class SAPService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ImportItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSuppliersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSAPQuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeMoveTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCreateVanOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVanOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportProdOrderOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReportProdOrderOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleLineItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterDistributionOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostDistributionOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RePostDistributionOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportLocLotDetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOrder2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSAPScheduleLineFromLesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentVanOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SAPService() {
            this.Url = global::com.Sconit.Service.Properties.Settings.Default.com_Sconit_Service_SAPService_SAPService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ImportItemCompletedEventHandler ImportItemCompleted;
        
        /// <remarks/>
        public event GetItemsCompletedEventHandler GetItemsCompleted;
        
        /// <remarks/>
        public event GetSuppliersCompletedEventHandler GetSuppliersCompleted;
        
        /// <remarks/>
        public event GetSAPQuotaCompletedEventHandler GetSAPQuotaCompleted;
        
        /// <remarks/>
        public event ExchangeMoveTypeCompletedEventHandler ExchangeMoveTypeCompleted;
        
        /// <remarks/>
        public event AutoCreateVanOrderCompletedEventHandler AutoCreateVanOrderCompleted;
        
        /// <remarks/>
        public event UpdateVanOrderCompletedEventHandler UpdateVanOrderCompleted;
        
        /// <remarks/>
        public event ReportProdOrderOperationCompletedEventHandler ReportProdOrderOperationCompleted;
        
        /// <remarks/>
        public event CancelReportProdOrderOperationCompletedEventHandler CancelReportProdOrderOperationCompleted;
        
        /// <remarks/>
        public event GetProcOrdersCompletedEventHandler GetProcOrdersCompleted;
        
        /// <remarks/>
        public event GetScheduleLineItemCompletedEventHandler GetScheduleLineItemCompleted;
        
        /// <remarks/>
        public event AlterDistributionOrderCompletedEventHandler AlterDistributionOrderCompleted;
        
        /// <remarks/>
        public event PostDistributionOrderCompletedEventHandler PostDistributionOrderCompleted;
        
        /// <remarks/>
        public event RePostDistributionOrderCompletedEventHandler RePostDistributionOrderCompleted;
        
        /// <remarks/>
        public event ReportLocLotDetCompletedEventHandler ReportLocLotDetCompleted;
        
        /// <remarks/>
        public event GetProductOrderCompletedEventHandler GetProductOrderCompleted;
        
        /// <remarks/>
        public event GetProductOrder2CompletedEventHandler GetProductOrder2Completed;
        
        /// <remarks/>
        public event CreateSAPScheduleLineFromLesCompletedEventHandler CreateSAPScheduleLineFromLesCompleted;
        
        /// <remarks/>
        public event GetCurrentVanOrderCompletedEventHandler GetCurrentVanOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/ImportItem", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportItem(Item[] itemList) {
            this.Invoke("ImportItem", new object[] {
                        itemList});
        }
        
        /// <remarks/>
        public void ImportItemAsync(Item[] itemList) {
            this.ImportItemAsync(itemList, null);
        }
        
        /// <remarks/>
        public void ImportItemAsync(Item[] itemList, object userState) {
            if ((this.ImportItemOperationCompleted == null)) {
                this.ImportItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportItemOperationCompleted);
            }
            this.InvokeAsync("ImportItem", new object[] {
                        itemList}, this.ImportItemOperationCompleted, userState);
        }
        
        private void OnImportItemOperationCompleted(object arg) {
            if ((this.ImportItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetItems", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItems(string itemCode, string plantCode, string userCode) {
            this.Invoke("GetItems", new object[] {
                        itemCode,
                        plantCode,
                        userCode});
        }
        
        /// <remarks/>
        public void GetItemsAsync(string itemCode, string plantCode, string userCode) {
            this.GetItemsAsync(itemCode, plantCode, userCode, null);
        }
        
        /// <remarks/>
        public void GetItemsAsync(string itemCode, string plantCode, string userCode, object userState) {
            if ((this.GetItemsOperationCompleted == null)) {
                this.GetItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsOperationCompleted);
            }
            this.InvokeAsync("GetItems", new object[] {
                        itemCode,
                        plantCode,
                        userCode}, this.GetItemsOperationCompleted, userState);
        }
        
        private void OnGetItemsOperationCompleted(object arg) {
            if ((this.GetItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetSuppliers", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSuppliers(string supplierCode, string userCode) {
            this.Invoke("GetSuppliers", new object[] {
                        supplierCode,
                        userCode});
        }
        
        /// <remarks/>
        public void GetSuppliersAsync(string supplierCode, string userCode) {
            this.GetSuppliersAsync(supplierCode, userCode, null);
        }
        
        /// <remarks/>
        public void GetSuppliersAsync(string supplierCode, string userCode, object userState) {
            if ((this.GetSuppliersOperationCompleted == null)) {
                this.GetSuppliersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSuppliersOperationCompleted);
            }
            this.InvokeAsync("GetSuppliers", new object[] {
                        supplierCode,
                        userCode}, this.GetSuppliersOperationCompleted, userState);
        }
        
        private void OnGetSuppliersOperationCompleted(object arg) {
            if ((this.GetSuppliersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSuppliersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetSAPQuota", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSAPQuota(string itemCode, string plantCode, string userCode) {
            this.Invoke("GetSAPQuota", new object[] {
                        itemCode,
                        plantCode,
                        userCode});
        }
        
        /// <remarks/>
        public void GetSAPQuotaAsync(string itemCode, string plantCode, string userCode) {
            this.GetSAPQuotaAsync(itemCode, plantCode, userCode, null);
        }
        
        /// <remarks/>
        public void GetSAPQuotaAsync(string itemCode, string plantCode, string userCode, object userState) {
            if ((this.GetSAPQuotaOperationCompleted == null)) {
                this.GetSAPQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSAPQuotaOperationCompleted);
            }
            this.InvokeAsync("GetSAPQuota", new object[] {
                        itemCode,
                        plantCode,
                        userCode}, this.GetSAPQuotaOperationCompleted, userState);
        }
        
        private void OnGetSAPQuotaOperationCompleted(object arg) {
            if ((this.GetSAPQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSAPQuotaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/ExchangeMoveType", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExchangeMoveType(string userCode) {
            this.Invoke("ExchangeMoveType", new object[] {
                        userCode});
        }
        
        /// <remarks/>
        public void ExchangeMoveTypeAsync(string userCode) {
            this.ExchangeMoveTypeAsync(userCode, null);
        }
        
        /// <remarks/>
        public void ExchangeMoveTypeAsync(string userCode, object userState) {
            if ((this.ExchangeMoveTypeOperationCompleted == null)) {
                this.ExchangeMoveTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeMoveTypeOperationCompleted);
            }
            this.InvokeAsync("ExchangeMoveType", new object[] {
                        userCode}, this.ExchangeMoveTypeOperationCompleted, userState);
        }
        
        private void OnExchangeMoveTypeOperationCompleted(object arg) {
            if ((this.ExchangeMoveTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeMoveTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/AutoCreateVanOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AutoCreateVanOrder(string prodLine, string userCode) {
            this.Invoke("AutoCreateVanOrder", new object[] {
                        prodLine,
                        userCode});
        }
        
        /// <remarks/>
        public void AutoCreateVanOrderAsync(string prodLine, string userCode) {
            this.AutoCreateVanOrderAsync(prodLine, userCode, null);
        }
        
        /// <remarks/>
        public void AutoCreateVanOrderAsync(string prodLine, string userCode, object userState) {
            if ((this.AutoCreateVanOrderOperationCompleted == null)) {
                this.AutoCreateVanOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCreateVanOrderOperationCompleted);
            }
            this.InvokeAsync("AutoCreateVanOrder", new object[] {
                        prodLine,
                        userCode}, this.AutoCreateVanOrderOperationCompleted, userState);
        }
        
        private void OnAutoCreateVanOrderOperationCompleted(object arg) {
            if ((this.AutoCreateVanOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCreateVanOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/UpdateVanOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] UpdateVanOrder(string plant, string sapOrderNo, string prodlLine, string userCode) {
            object[] results = this.Invoke("UpdateVanOrder", new object[] {
                        plant,
                        sapOrderNo,
                        prodlLine,
                        userCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVanOrderAsync(string plant, string sapOrderNo, string prodlLine, string userCode) {
            this.UpdateVanOrderAsync(plant, sapOrderNo, prodlLine, userCode, null);
        }
        
        /// <remarks/>
        public void UpdateVanOrderAsync(string plant, string sapOrderNo, string prodlLine, string userCode, object userState) {
            if ((this.UpdateVanOrderOperationCompleted == null)) {
                this.UpdateVanOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVanOrderOperationCompleted);
            }
            this.InvokeAsync("UpdateVanOrder", new object[] {
                        plant,
                        sapOrderNo,
                        prodlLine,
                        userCode}, this.UpdateVanOrderOperationCompleted, userState);
        }
        
        private void OnUpdateVanOrderOperationCompleted(object arg) {
            if ((this.UpdateVanOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVanOrderCompleted(this, new UpdateVanOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/ReportProdOrderOperation", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReportProdOrderOperation(string userCode) {
            this.Invoke("ReportProdOrderOperation", new object[] {
                        userCode});
        }
        
        /// <remarks/>
        public void ReportProdOrderOperationAsync(string userCode) {
            this.ReportProdOrderOperationAsync(userCode, null);
        }
        
        /// <remarks/>
        public void ReportProdOrderOperationAsync(string userCode, object userState) {
            if ((this.ReportProdOrderOperationOperationCompleted == null)) {
                this.ReportProdOrderOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportProdOrderOperationOperationCompleted);
            }
            this.InvokeAsync("ReportProdOrderOperation", new object[] {
                        userCode}, this.ReportProdOrderOperationOperationCompleted, userState);
        }
        
        private void OnReportProdOrderOperationOperationCompleted(object arg) {
            if ((this.ReportProdOrderOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportProdOrderOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/CancelReportProdOrderOperation", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CancelReportProdOrderOperation(string AUFNR, string TEXT, string userCode) {
            object[] results = this.Invoke("CancelReportProdOrderOperation", new object[] {
                        AUFNR,
                        TEXT,
                        userCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelReportProdOrderOperationAsync(string AUFNR, string TEXT, string userCode) {
            this.CancelReportProdOrderOperationAsync(AUFNR, TEXT, userCode, null);
        }
        
        /// <remarks/>
        public void CancelReportProdOrderOperationAsync(string AUFNR, string TEXT, string userCode, object userState) {
            if ((this.CancelReportProdOrderOperationOperationCompleted == null)) {
                this.CancelReportProdOrderOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReportProdOrderOperationOperationCompleted);
            }
            this.InvokeAsync("CancelReportProdOrderOperation", new object[] {
                        AUFNR,
                        TEXT,
                        userCode}, this.CancelReportProdOrderOperationOperationCompleted, userState);
        }
        
        private void OnCancelReportProdOrderOperationOperationCompleted(object arg) {
            if ((this.CancelReportProdOrderOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReportProdOrderOperationCompleted(this, new CancelReportProdOrderOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetProcOrders", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDetail[] GetProcOrders(string flow, string supplier, string item, string plant, string userCode) {
            object[] results = this.Invoke("GetProcOrders", new object[] {
                        flow,
                        supplier,
                        item,
                        plant,
                        userCode});
            return ((OrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProcOrdersAsync(string flow, string supplier, string item, string plant, string userCode) {
            this.GetProcOrdersAsync(flow, supplier, item, plant, userCode, null);
        }
        
        /// <remarks/>
        public void GetProcOrdersAsync(string flow, string supplier, string item, string plant, string userCode, object userState) {
            if ((this.GetProcOrdersOperationCompleted == null)) {
                this.GetProcOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcOrdersOperationCompleted);
            }
            this.InvokeAsync("GetProcOrders", new object[] {
                        flow,
                        supplier,
                        item,
                        plant,
                        userCode}, this.GetProcOrdersOperationCompleted, userState);
        }
        
        private void OnGetProcOrdersOperationCompleted(object arg) {
            if ((this.GetProcOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcOrdersCompleted(this, new GetProcOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetScheduleLineItem", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public object[][] GetScheduleLineItem(string userCode, string item, string supplier, string plant) {
            object[] results = this.Invoke("GetScheduleLineItem", new object[] {
                        userCode,
                        item,
                        supplier,
                        plant});
            return ((object[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleLineItemAsync(string userCode, string item, string supplier, string plant) {
            this.GetScheduleLineItemAsync(userCode, item, supplier, plant, null);
        }
        
        /// <remarks/>
        public void GetScheduleLineItemAsync(string userCode, string item, string supplier, string plant, object userState) {
            if ((this.GetScheduleLineItemOperationCompleted == null)) {
                this.GetScheduleLineItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleLineItemOperationCompleted);
            }
            this.InvokeAsync("GetScheduleLineItem", new object[] {
                        userCode,
                        item,
                        supplier,
                        plant}, this.GetScheduleLineItemOperationCompleted, userState);
        }
        
        private void OnGetScheduleLineItemOperationCompleted(object arg) {
            if ((this.GetScheduleLineItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleLineItemCompleted(this, new GetScheduleLineItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/AlterDistributionOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AlterDistributionOrder(AlterDO[] alterDOs) {
            object[] results = this.Invoke("AlterDistributionOrder", new object[] {
                        alterDOs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AlterDistributionOrderAsync(AlterDO[] alterDOs) {
            this.AlterDistributionOrderAsync(alterDOs, null);
        }
        
        /// <remarks/>
        public void AlterDistributionOrderAsync(AlterDO[] alterDOs, object userState) {
            if ((this.AlterDistributionOrderOperationCompleted == null)) {
                this.AlterDistributionOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterDistributionOrderOperationCompleted);
            }
            this.InvokeAsync("AlterDistributionOrder", new object[] {
                        alterDOs}, this.AlterDistributionOrderOperationCompleted, userState);
        }
        
        private void OnAlterDistributionOrderOperationCompleted(object arg) {
            if ((this.AlterDistributionOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterDistributionOrderCompleted(this, new AlterDistributionOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/PostDistributionOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostDistributionOrder(string userCode) {
            this.Invoke("PostDistributionOrder", new object[] {
                        userCode});
        }
        
        /// <remarks/>
        public void PostDistributionOrderAsync(string userCode) {
            this.PostDistributionOrderAsync(userCode, null);
        }
        
        /// <remarks/>
        public void PostDistributionOrderAsync(string userCode, object userState) {
            if ((this.PostDistributionOrderOperationCompleted == null)) {
                this.PostDistributionOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostDistributionOrderOperationCompleted);
            }
            this.InvokeAsync("PostDistributionOrder", new object[] {
                        userCode}, this.PostDistributionOrderOperationCompleted, userState);
        }
        
        private void OnPostDistributionOrderOperationCompleted(object arg) {
            if ((this.PostDistributionOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostDistributionOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/RePostDistributionOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RePostDistributionOrder(string userCode) {
            this.Invoke("RePostDistributionOrder", new object[] {
                        userCode});
        }
        
        /// <remarks/>
        public void RePostDistributionOrderAsync(string userCode) {
            this.RePostDistributionOrderAsync(userCode, null);
        }
        
        /// <remarks/>
        public void RePostDistributionOrderAsync(string userCode, object userState) {
            if ((this.RePostDistributionOrderOperationCompleted == null)) {
                this.RePostDistributionOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRePostDistributionOrderOperationCompleted);
            }
            this.InvokeAsync("RePostDistributionOrder", new object[] {
                        userCode}, this.RePostDistributionOrderOperationCompleted, userState);
        }
        
        private void OnRePostDistributionOrderOperationCompleted(object arg) {
            if ((this.RePostDistributionOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RePostDistributionOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/ReportLocLotDet", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReportLocLotDet(string userCode, string ftpServer, int ftpPort, string ftpUser, string ftpPass, string ftpFolder, string localFolder, string localTempFolder) {
            this.Invoke("ReportLocLotDet", new object[] {
                        userCode,
                        ftpServer,
                        ftpPort,
                        ftpUser,
                        ftpPass,
                        ftpFolder,
                        localFolder,
                        localTempFolder});
        }
        
        /// <remarks/>
        public void ReportLocLotDetAsync(string userCode, string ftpServer, int ftpPort, string ftpUser, string ftpPass, string ftpFolder, string localFolder, string localTempFolder) {
            this.ReportLocLotDetAsync(userCode, ftpServer, ftpPort, ftpUser, ftpPass, ftpFolder, localFolder, localTempFolder, null);
        }
        
        /// <remarks/>
        public void ReportLocLotDetAsync(string userCode, string ftpServer, int ftpPort, string ftpUser, string ftpPass, string ftpFolder, string localFolder, string localTempFolder, object userState) {
            if ((this.ReportLocLotDetOperationCompleted == null)) {
                this.ReportLocLotDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportLocLotDetOperationCompleted);
            }
            this.InvokeAsync("ReportLocLotDet", new object[] {
                        userCode,
                        ftpServer,
                        ftpPort,
                        ftpUser,
                        ftpPass,
                        ftpFolder,
                        localFolder,
                        localTempFolder}, this.ReportLocLotDetOperationCompleted, userState);
        }
        
        private void OnReportLocLotDetOperationCompleted(object arg) {
            if ((this.ReportLocLotDetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportLocLotDetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetProductOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProductOrder(string plant, string[] sapOrderNoList, string userCode) {
            object[] results = this.Invoke("GetProductOrder", new object[] {
                        plant,
                        sapOrderNoList,
                        userCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductOrderAsync(string plant, string[] sapOrderNoList, string userCode) {
            this.GetProductOrderAsync(plant, sapOrderNoList, userCode, null);
        }
        
        /// <remarks/>
        public void GetProductOrderAsync(string plant, string[] sapOrderNoList, string userCode, object userState) {
            if ((this.GetProductOrderOperationCompleted == null)) {
                this.GetProductOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOrderOperationCompleted);
            }
            this.InvokeAsync("GetProductOrder", new object[] {
                        plant,
                        sapOrderNoList,
                        userCode}, this.GetProductOrderOperationCompleted, userState);
        }
        
        private void OnGetProductOrderOperationCompleted(object arg) {
            if ((this.GetProductOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductOrderCompleted(this, new GetProductOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetProductOrder2", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProductOrder2(string plant, string[] sapOrderTypeList, DateOption dateOption, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dateFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dateTo, string[] mrpCtrlList, string userCode) {
            object[] results = this.Invoke("GetProductOrder2", new object[] {
                        plant,
                        sapOrderTypeList,
                        dateOption,
                        dateFrom,
                        dateTo,
                        mrpCtrlList,
                        userCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductOrder2Async(string plant, string[] sapOrderTypeList, DateOption dateOption, System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo, string[] mrpCtrlList, string userCode) {
            this.GetProductOrder2Async(plant, sapOrderTypeList, dateOption, dateFrom, dateTo, mrpCtrlList, userCode, null);
        }
        
        /// <remarks/>
        public void GetProductOrder2Async(string plant, string[] sapOrderTypeList, DateOption dateOption, System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo, string[] mrpCtrlList, string userCode, object userState) {
            if ((this.GetProductOrder2OperationCompleted == null)) {
                this.GetProductOrder2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOrder2OperationCompleted);
            }
            this.InvokeAsync("GetProductOrder2", new object[] {
                        plant,
                        sapOrderTypeList,
                        dateOption,
                        dateFrom,
                        dateTo,
                        mrpCtrlList,
                        userCode}, this.GetProductOrder2OperationCompleted, userState);
        }
        
        private void OnGetProductOrder2OperationCompleted(object arg) {
            if ((this.GetProductOrder2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductOrder2Completed(this, new GetProductOrder2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/CreateSAPScheduleLineFromLes", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateSAPScheduleLineFromLes(string userCode) {
            this.Invoke("CreateSAPScheduleLineFromLes", new object[] {
                        userCode});
        }
        
        /// <remarks/>
        public void CreateSAPScheduleLineFromLesAsync(string userCode) {
            this.CreateSAPScheduleLineFromLesAsync(userCode, null);
        }
        
        /// <remarks/>
        public void CreateSAPScheduleLineFromLesAsync(string userCode, object userState) {
            if ((this.CreateSAPScheduleLineFromLesOperationCompleted == null)) {
                this.CreateSAPScheduleLineFromLesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSAPScheduleLineFromLesOperationCompleted);
            }
            this.InvokeAsync("CreateSAPScheduleLineFromLes", new object[] {
                        userCode}, this.CreateSAPScheduleLineFromLesOperationCompleted, userState);
        }
        
        private void OnCreateSAPScheduleLineFromLesOperationCompleted(object arg) {
            if ((this.CreateSAPScheduleLineFromLesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSAPScheduleLineFromLesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.SAP.SAPService/GetCurrentVanOrder", RequestNamespace="http://com.Sconit.WebService.SAP.SAPService/", ResponseNamespace="http://com.Sconit.WebService.SAP.SAPService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCurrentVanOrder(string plant, string sapOrderNo, string prodlLine, string userCode) {
            this.Invoke("GetCurrentVanOrder", new object[] {
                        plant,
                        sapOrderNo,
                        prodlLine,
                        userCode});
        }
        
        /// <remarks/>
        public void GetCurrentVanOrderAsync(string plant, string sapOrderNo, string prodlLine, string userCode) {
            this.GetCurrentVanOrderAsync(plant, sapOrderNo, prodlLine, userCode, null);
        }
        
        /// <remarks/>
        public void GetCurrentVanOrderAsync(string plant, string sapOrderNo, string prodlLine, string userCode, object userState) {
            if ((this.GetCurrentVanOrderOperationCompleted == null)) {
                this.GetCurrentVanOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentVanOrderOperationCompleted);
            }
            this.InvokeAsync("GetCurrentVanOrder", new object[] {
                        plant,
                        sapOrderNo,
                        prodlLine,
                        userCode}, this.GetCurrentVanOrderOperationCompleted, userState);
        }
        
        private void OnGetCurrentVanOrderOperationCompleted(object arg) {
            if ((this.GetCurrentVanOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentVanOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public partial class Item : SAPEntityBase {
        
        private string codeField;
        
        private string referenceCodeField;
        
        private string shortCodeField;
        
        private string descriptionField;
        
        private string uomField;
        
        private string plantField;
        
        private string dISPOField;
        
        private string pLIFZField;
        
        private string bESKZField;
        
        private string sOBSLField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceCode {
            get {
                return this.referenceCodeField;
            }
            set {
                this.referenceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCode {
            get {
                return this.shortCodeField;
            }
            set {
                this.shortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        public string Plant {
            get {
                return this.plantField;
            }
            set {
                this.plantField = value;
            }
        }
        
        /// <remarks/>
        public string DISPO {
            get {
                return this.dISPOField;
            }
            set {
                this.dISPOField = value;
            }
        }
        
        /// <remarks/>
        public string PLIFZ {
            get {
                return this.pLIFZField;
            }
            set {
                this.pLIFZField = value;
            }
        }
        
        /// <remarks/>
        public string BESKZ {
            get {
                return this.bESKZField;
            }
            set {
                this.bESKZField = value;
            }
        }
        
        /// <remarks/>
        public string SOBSL {
            get {
                return this.sOBSLField;
            }
            set {
                this.sOBSLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AlterDO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Item))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public abstract partial class SAPEntityBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public partial class AlterDO : SAPEntityBase {
        
        private string orderNoField;
        
        private int sequenceField;
        
        private string itemField;
        
        private string plantField;
        
        private string locationField;
        
        private decimal qtyField;
        
        private string uomField;
        
        private string kUNAGField;
        
        private string kUNNRField;
        
        private string actionField;
        
        private System.DateTime windowTimeField;
        
        private string externalOrderNoField;
        
        /// <remarks/>
        public string OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public string Plant {
            get {
                return this.plantField;
            }
            set {
                this.plantField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public string Uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        public string KUNAG {
            get {
                return this.kUNAGField;
            }
            set {
                this.kUNAGField = value;
            }
        }
        
        /// <remarks/>
        public string KUNNR {
            get {
                return this.kUNNRField;
            }
            set {
                this.kUNNRField = value;
            }
        }
        
        /// <remarks/>
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WindowTime {
            get {
                return this.windowTimeField;
            }
            set {
                this.windowTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalOrderNo {
            get {
                return this.externalOrderNoField;
            }
            set {
                this.externalOrderNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public partial class OrderDetail : SAPEntityBase {
        
        private int idField;
        
        private string orderNoField;
        
        private OrderType orderTypeField;
        
        private OrderSubType orderSubTypeField;
        
        private int sequenceField;
        
        private string itemField;
        
        private string itemDescriptionField;
        
        private string referenceItemCodeField;
        
        private string baseUomField;
        
        private string uomField;
        
        private string partyToField;
        
        private decimal unitCountField;
        
        private string unitCountDescriptionField;
        
        private decimal minUnitCountField;
        
        private QualityType qualityTypeField;
        
        private string manufacturePartyField;
        
        private decimal requiredQtyField;
        
        private decimal orderedQtyField;
        
        private decimal shippedQtyField;
        
        private decimal receivedQtyField;
        
        private decimal rejectedQtyField;
        
        private decimal scrapQtyField;
        
        private decimal pickedQtyField;
        
        private decimal unitQtyField;
        
        private System.Nullable<decimal> receiveLotSizeField;
        
        private string locationFromField;
        
        private string locationFromNameField;
        
        private string locationToField;
        
        private string locationToNameField;
        
        private bool isInspectField;
        
        private string billAddressField;
        
        private string billAddressDescriptionField;
        
        private string priceListField;
        
        private System.Nullable<decimal> unitPriceField;
        
        private bool isProvisionalEstimateField;
        
        private string taxField;
        
        private bool isIncludeTaxField;
        
        private string bomField;
        
        private string routingField;
        
        private OrderBillTerm billTermField;
        
        private string zOPWZField;
        
        private string zOPIDField;
        
        private string zOPDSField;
        
        private int createUserIdField;
        
        private string createUserNameField;
        
        private System.DateTime createDateField;
        
        private int lastModifyUserIdField;
        
        private string lastModifyUserNameField;
        
        private System.DateTime lastModifyDateField;
        
        private int versionField;
        
        private string containerField;
        
        private string containerDescriptionField;
        
        private string currencyField;
        
        private string pickStrategyField;
        
        private string extraDemandSourceField;
        
        private bool isScanHuField;
        
        private string externalOrderNoField;
        
        private string externalSequenceField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private string reserveNoField;
        
        private string reserveLineField;
        
        private string binToField;
        
        private string wMSSeqField;
        
        private bool isChangeUnitCountField;
        
        private string aUFNRField;
        
        private string iCHARGField;
        
        private string bWARTField;
        
        private int freezeDaysField;
        
        private string flowField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        public OrderType OrderType {
            get {
                return this.orderTypeField;
            }
            set {
                this.orderTypeField = value;
            }
        }
        
        /// <remarks/>
        public OrderSubType OrderSubType {
            get {
                return this.orderSubTypeField;
            }
            set {
                this.orderSubTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceItemCode {
            get {
                return this.referenceItemCodeField;
            }
            set {
                this.referenceItemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BaseUom {
            get {
                return this.baseUomField;
            }
            set {
                this.baseUomField = value;
            }
        }
        
        /// <remarks/>
        public string Uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        public string PartyTo {
            get {
                return this.partyToField;
            }
            set {
                this.partyToField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitCount {
            get {
                return this.unitCountField;
            }
            set {
                this.unitCountField = value;
            }
        }
        
        /// <remarks/>
        public string UnitCountDescription {
            get {
                return this.unitCountDescriptionField;
            }
            set {
                this.unitCountDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal MinUnitCount {
            get {
                return this.minUnitCountField;
            }
            set {
                this.minUnitCountField = value;
            }
        }
        
        /// <remarks/>
        public QualityType QualityType {
            get {
                return this.qualityTypeField;
            }
            set {
                this.qualityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ManufactureParty {
            get {
                return this.manufacturePartyField;
            }
            set {
                this.manufacturePartyField = value;
            }
        }
        
        /// <remarks/>
        public decimal RequiredQty {
            get {
                return this.requiredQtyField;
            }
            set {
                this.requiredQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderedQty {
            get {
                return this.orderedQtyField;
            }
            set {
                this.orderedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal ShippedQty {
            get {
                return this.shippedQtyField;
            }
            set {
                this.shippedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReceivedQty {
            get {
                return this.receivedQtyField;
            }
            set {
                this.receivedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal RejectedQty {
            get {
                return this.rejectedQtyField;
            }
            set {
                this.rejectedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal ScrapQty {
            get {
                return this.scrapQtyField;
            }
            set {
                this.scrapQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal PickedQty {
            get {
                return this.pickedQtyField;
            }
            set {
                this.pickedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitQty {
            get {
                return this.unitQtyField;
            }
            set {
                this.unitQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ReceiveLotSize {
            get {
                return this.receiveLotSizeField;
            }
            set {
                this.receiveLotSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LocationFrom {
            get {
                return this.locationFromField;
            }
            set {
                this.locationFromField = value;
            }
        }
        
        /// <remarks/>
        public string LocationFromName {
            get {
                return this.locationFromNameField;
            }
            set {
                this.locationFromNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationTo {
            get {
                return this.locationToField;
            }
            set {
                this.locationToField = value;
            }
        }
        
        /// <remarks/>
        public string LocationToName {
            get {
                return this.locationToNameField;
            }
            set {
                this.locationToNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInspect {
            get {
                return this.isInspectField;
            }
            set {
                this.isInspectField = value;
            }
        }
        
        /// <remarks/>
        public string BillAddress {
            get {
                return this.billAddressField;
            }
            set {
                this.billAddressField = value;
            }
        }
        
        /// <remarks/>
        public string BillAddressDescription {
            get {
                return this.billAddressDescriptionField;
            }
            set {
                this.billAddressDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PriceList {
            get {
                return this.priceListField;
            }
            set {
                this.priceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProvisionalEstimate {
            get {
                return this.isProvisionalEstimateField;
            }
            set {
                this.isProvisionalEstimateField = value;
            }
        }
        
        /// <remarks/>
        public string Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        public bool IsIncludeTax {
            get {
                return this.isIncludeTaxField;
            }
            set {
                this.isIncludeTaxField = value;
            }
        }
        
        /// <remarks/>
        public string Bom {
            get {
                return this.bomField;
            }
            set {
                this.bomField = value;
            }
        }
        
        /// <remarks/>
        public string Routing {
            get {
                return this.routingField;
            }
            set {
                this.routingField = value;
            }
        }
        
        /// <remarks/>
        public OrderBillTerm BillTerm {
            get {
                return this.billTermField;
            }
            set {
                this.billTermField = value;
            }
        }
        
        /// <remarks/>
        public string ZOPWZ {
            get {
                return this.zOPWZField;
            }
            set {
                this.zOPWZField = value;
            }
        }
        
        /// <remarks/>
        public string ZOPID {
            get {
                return this.zOPIDField;
            }
            set {
                this.zOPIDField = value;
            }
        }
        
        /// <remarks/>
        public string ZOPDS {
            get {
                return this.zOPDSField;
            }
            set {
                this.zOPDSField = value;
            }
        }
        
        /// <remarks/>
        public int CreateUserId {
            get {
                return this.createUserIdField;
            }
            set {
                this.createUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int LastModifyUserId {
            get {
                return this.lastModifyUserIdField;
            }
            set {
                this.lastModifyUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string LastModifyUserName {
            get {
                return this.lastModifyUserNameField;
            }
            set {
                this.lastModifyUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifyDate {
            get {
                return this.lastModifyDateField;
            }
            set {
                this.lastModifyDateField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Container {
            get {
                return this.containerField;
            }
            set {
                this.containerField = value;
            }
        }
        
        /// <remarks/>
        public string ContainerDescription {
            get {
                return this.containerDescriptionField;
            }
            set {
                this.containerDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string PickStrategy {
            get {
                return this.pickStrategyField;
            }
            set {
                this.pickStrategyField = value;
            }
        }
        
        /// <remarks/>
        public string ExtraDemandSource {
            get {
                return this.extraDemandSourceField;
            }
            set {
                this.extraDemandSourceField = value;
            }
        }
        
        /// <remarks/>
        public bool IsScanHu {
            get {
                return this.isScanHuField;
            }
            set {
                this.isScanHuField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalOrderNo {
            get {
                return this.externalOrderNoField;
            }
            set {
                this.externalOrderNoField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalSequence {
            get {
                return this.externalSequenceField;
            }
            set {
                this.externalSequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReserveNo {
            get {
                return this.reserveNoField;
            }
            set {
                this.reserveNoField = value;
            }
        }
        
        /// <remarks/>
        public string ReserveLine {
            get {
                return this.reserveLineField;
            }
            set {
                this.reserveLineField = value;
            }
        }
        
        /// <remarks/>
        public string BinTo {
            get {
                return this.binToField;
            }
            set {
                this.binToField = value;
            }
        }
        
        /// <remarks/>
        public string WMSSeq {
            get {
                return this.wMSSeqField;
            }
            set {
                this.wMSSeqField = value;
            }
        }
        
        /// <remarks/>
        public bool IsChangeUnitCount {
            get {
                return this.isChangeUnitCountField;
            }
            set {
                this.isChangeUnitCountField = value;
            }
        }
        
        /// <remarks/>
        public string AUFNR {
            get {
                return this.aUFNRField;
            }
            set {
                this.aUFNRField = value;
            }
        }
        
        /// <remarks/>
        public string ICHARG {
            get {
                return this.iCHARGField;
            }
            set {
                this.iCHARGField = value;
            }
        }
        
        /// <remarks/>
        public string BWART {
            get {
                return this.bWARTField;
            }
            set {
                this.bWARTField = value;
            }
        }
        
        /// <remarks/>
        public int FreezeDays {
            get {
                return this.freezeDaysField;
            }
            set {
                this.freezeDaysField = value;
            }
        }
        
        /// <remarks/>
        public string Flow {
            get {
                return this.flowField;
            }
            set {
                this.flowField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public enum OrderType {
        
        /// <remarks/>
        Procurement,
        
        /// <remarks/>
        Transfer,
        
        /// <remarks/>
        Distribution,
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        SubContract,
        
        /// <remarks/>
        CustomerGoods,
        
        /// <remarks/>
        SubContractTransfer,
        
        /// <remarks/>
        ScheduleLine,
        
        /// <remarks/>
        OnlySupplier,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public enum OrderSubType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Return,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public enum QualityType {
        
        /// <remarks/>
        Qualified,
        
        /// <remarks/>
        Inspect,
        
        /// <remarks/>
        Reject,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public enum OrderBillTerm {
        
        /// <remarks/>
        NA,
        
        /// <remarks/>
        ReceivingSettlement,
        
        /// <remarks/>
        AfterInspection,
        
        /// <remarks/>
        OnlineBilling,
        
        /// <remarks/>
        LinearClearing,
        
        /// <remarks/>
        ConsignmentBilling,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.SAP.SAPService/")]
    public enum DateOption {
        
        /// <remarks/>
        EQ,
        
        /// <remarks/>
        GT,
        
        /// <remarks/>
        GE,
        
        /// <remarks/>
        LT,
        
        /// <remarks/>
        LE,
        
        /// <remarks/>
        BT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSuppliersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSAPQuotaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExchangeMoveTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AutoCreateVanOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateVanOrderCompletedEventHandler(object sender, UpdateVanOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVanOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVanOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportProdOrderOperationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelReportProdOrderOperationCompletedEventHandler(object sender, CancelReportProdOrderOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReportProdOrderOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReportProdOrderOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcOrdersCompletedEventHandler(object sender, GetProcOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScheduleLineItemCompletedEventHandler(object sender, GetScheduleLineItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleLineItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleLineItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AlterDistributionOrderCompletedEventHandler(object sender, AlterDistributionOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterDistributionOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterDistributionOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostDistributionOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RePostDistributionOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportLocLotDetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProductOrderCompletedEventHandler(object sender, GetProductOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProductOrder2CompletedEventHandler(object sender, GetProductOrder2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductOrder2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductOrder2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateSAPScheduleLineFromLesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurrentVanOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591