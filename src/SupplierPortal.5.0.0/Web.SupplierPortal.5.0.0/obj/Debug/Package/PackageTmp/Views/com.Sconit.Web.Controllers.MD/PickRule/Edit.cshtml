@model com.Sconit.Entity.MD.PickRule
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_PickRule_View" });
}
<script type="text/javascript">
    function Location_Change(e) {
        if (e.value != "") {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            }

        }
        $('#Picker').data('tComboBox').value('');
        $('#Picker').data('tComboBox').text('');
        $("#Picker").data("tComboBox").reload();
    }

    function Picker_DataBinding(e) {
        e.data = {
            location: $('#Location').val()
        };
    }

</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MD.Picker.PickRule_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.CreateUserId)
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.LastModifyUserId)
            @Html.HiddenFor(model => model.LastModifyUserName)
            @Html.HiddenFor(model => model.LastModifyDate)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Item)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemComboBox", "Common", new { controlName = "Item", selectedValue = Model.Item });
                }
                @Html.ValidationMessageFor(model => model.Item)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Location)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_LocationComboBox", "Common", new
    {
        ControlId = "Location",
        controlName = "Location",
        isChange = true,
        selectedValue = Model != null ? Model.Location : string.Empty
    });
                }
                @Html.ValidationMessageFor(model => model.Location)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Picker)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_PickerComboBox", "Common", new
    {
        controlName = "Picker",
        checkLocation = true,
        selectedValue = Model != null ? Model.Picker : string.Empty
    });
                }
                @Html.ValidationMessageFor(model => model.Picker)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.Global.Button_Save, "Url_PickRule_View", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnSave"},
        {"needconfirm","true"}
	})
            @Html.Button(Resources.Global.Button_Delete, "Url_PickRule_View", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnDelete"},
        {"needconfirm","true"},
        {"onclick","location.href='"+@Url.Content("~/PickRule/Delete/"+@Model.Id)+"'"}
    })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/PickRule/List")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
}
