@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.KB.KanbanScan
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_KanbanScan_View" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.KB.KanbanScan.KanbanScan_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CardNo)
            @Html.HiddenFor(model => model.Sequence)
            @Html.HiddenFor(model => model.Flow)
            @Html.HiddenFor(model => model.FlowDetailId)
            @Html.HiddenFor(model => model.LogisticCenterCode)
            @Html.HiddenFor(model => model.PONo)
            @Html.HiddenFor(model => model.POLineNo)
            @Html.HiddenFor(model => model.Region)
            @Html.HiddenFor(model => model.RegionName)
            @Html.HiddenFor(model => model.Supplier)
            @Html.HiddenFor(model => model.SupplierName)
            @Html.HiddenFor(model => model.Item)
            @Html.HiddenFor(model => model.ItemDescription)
            @Html.HiddenFor(model => model.ScanUserId)
            @Html.HiddenFor(model => model.ScanUserName)
            @Html.HiddenFor(model => model.ScanTime)
            @Html.HiddenFor(model => model.OrderUserId)
            @Html.HiddenFor(model => model.OrderUserName)
            @Html.HiddenFor(model => model.OrderTime)
            @Html.HiddenFor(model => model.OrderQty)
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.LastModifyUserName)
            @Html.HiddenFor(model => model.LastModifyDate)
            @Html.HiddenFor(model => model.UnitCount)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CardNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CardNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Sequence)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Sequence)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Supplier)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Supplier)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.SupplierName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.SupplierName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Region)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Region)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.RegionName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.RegionName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Item)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Item)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemDescription)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ItemDescription)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LogisticCenterCode)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LogisticCenterCode)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PONo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PONo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ScanTime)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ScanTime)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.OrderTime)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.OrderTime)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.OrderQty)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.OrderQty)
            </div>
            @{if (Model.IsOrdered)
              {
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.ScanQty)
                </div>
                <div class="editor-field-2">
                    @Html.DisplayFor(model => model.ScanQty)
                </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.TempKanbanCard)
                </div>
                <div class="editor-field-2">
                    @Html.DisplayFor(model => model.TempKanbanCard)
                </div>
              }
              else
              {
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.ScanQty)
                </div>
                <div class="editor-field-2">
                    <input id="ScanQty" name="ScanQty" type="text"  style="width: 50px" value="@ViewBag.ScanQty" />
                </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.TempKanbanCard)
                </div>
                <div class="editor-field-2">
                    <input id="TempKanbanCard" name="TempKanbanCard" type="text"  value="@ViewBag.TempKanbanCard" />
                </div>
              }
            }
        </div>
        <div class="editor-footer">
            @*<button type="submit" id="btnSave">
                @Resources.Global.Button_Save</button>
            <button type="button" id="btnDelete" onclick="location.href='@Url.Content("~/Address/Delete/" + @Model.Code)'">
                @Resources.Global.Button_Delete</button>*@
                @if (!Model.IsOrdered)
                {
            @Html.Button(Resources.Global.Button_Save, "Url_KanbanScan_View", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnSave"},
        {"needconfirm","true"}
	})
            @Html.Button(Resources.Global.Button_Delete, "Url_KanbanScan_View", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnDelete"},
        {"needconfirm","true"},
        {"onclick","location.href='"+@Url.Content("~/KanbanScan/Delete/"+@Model.Id)+"'"}
    })
                }
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/KanbanScan/List")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
    
}
