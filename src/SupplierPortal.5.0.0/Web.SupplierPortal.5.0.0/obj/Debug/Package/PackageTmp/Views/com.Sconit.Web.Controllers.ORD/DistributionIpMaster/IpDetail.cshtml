@model IEnumerable<com.Sconit.Entity.ORD.IpDetail>
<script type="text/javascript">

    var i = 0;
    function IpDetailGrid_OnRowDataBound(e) {
        if (i != 0) {
            return;
        }
        var rows = $("tbody").children("tr:not(.t-no-data)");
        // var rows = grid.$tbody.children("tr:not(.t-no-data)");
        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var IsClose = row.children().eq(21).text();
            if (IsClose == "true") {
                row.children().eq(22).children().hide();
            }
        }
        i = rows.length;

    }

    function CancelDetailClick(e) {
        $(e).attr("href", "#");
        if (confirm("确定取消此行吗？")) {
            var data = {
                Id: $(e).parent().parent().children().eq(0).text()
            }
            $.ajax({
                type: "post",
                dataType: "json",
                url: "@Url.Content("~/DistributionIpMaster/CancelIpDetail/")",
                data: data,
                success: function (data, ordermstr) {
                    DisplayJsonMessages(data);
                    $(e).attr("style", "display:none");
                    $(e).parent().parent().children().eq(14).html("<input type='checkbox' disabled='disabled' name='IsClose'  checked='checked' />");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }
    }
</script>
<fieldset>
    <legend>@Resources.ORD.IpDetail.IpDetail_Title</legend>
    @(Html.Telerik().Grid(Model)
        .Name("IpDetail")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Hidden();
            columns.Bound(o => o.Sequence);
            columns.Bound(o => o.IpNo).Width(100);
            columns.Bound(o => o.OrderNo).Width(100);
            columns.Bound(o => o.ExternalOrderNo).Width(100);
            columns.Bound(o => o.ExternalSequence).Width(100);
            columns.Bound(o => o.Flow).Title(Resources.ORD.IpMaster.IpMaster_Flow);
            columns.Bound(o => o.LocationTo);
            columns.Bound(o => o.SAPLocationTo).Title("SAP库位");
            columns.Bound(o => o.Item).Width(100);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.Qty).Width(100);
            columns.Bound(o => o.ReceivedQty).Width(100);
            columns.Bound(o => o.IsClose).ClientTemplate("<input type='checkbox' disabled='disabled' name='IsClose' <#= IsClose? checked='checked' : '' #> />");
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.ManufactureParty);
            columns.Bound(o => o.IsInspect).ClientTemplate("<input type='checkbox' disabled='disabled' name='IsInspect' <#= IsInspect? '' : checked='checked' #> />").Title("是否免检");
            columns.Bound(o => o.UnitCountDescription);
            columns.Bound(o => o.Container).ReadOnly();
            columns.Bound(o => o.ContainerDescription);
            columns.Bound(o => o.IsClose).Hidden();
            if (ViewBag.IsCancel)
            {
                columns.Command(commands => commands.Custom("Cancel")
               .Text("取消")
                 .HtmlAttributes(new { onClick = "CancelDetailClick(this)", id = "CancelId", href = "#" })
                 );
            }
        })
                                .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxIpDetailList", "DistributionIpMaster"))
                                .ClientEvents(events => events.OnRowDataBound("IpDetailGrid_OnRowDataBound"))
                .Pageable(settings =>
                {
                    settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
                    settings.PageSize(ViewBag.PageSize);
                })

        .Sortable()
                .Resizable(resizing => resizing.Columns(true))

    )
</fieldset>
@*@model IEnumerable<com.Sconit.Entity.ORD.IpDetail>
           
<fieldset>
<legend>@Resources.ORD.IpMaster.IpDetail_Edit_Title</legend>
    @(Html.Telerik().Grid(Model)
        .Name("IpDetailGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.IpNo);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.OrderNo);
            columns.Bound(o => o.Flow).Title(Resources.ORD.IpMaster.IpMaster_Flow);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UnitCount).Format("{0:N}");
            columns.Bound(o => o.Container).Format("{0:N}");
            columns.Bound(o => o.ContainerDescription).Format("{0:N}");
            columns.Bound(o => o.LocationToName);
            columns.Bound(o => o.TypeDescription);
            columns.Bound(o => o.Qty).Format("{0:N}");
            columns.Bound(o => o.ReceivedQty).Format("{0:N}");
            columns.Bound(o => o.IsClose).ClientTemplate("<input type='checkbox' disabled='disabled' name='IsClose' <#= IsClose? checked='checked' : '' #> />");
        })
        .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxIpDetailList", "DistributionIpMaster"))
              //  .ClientEvents(events => events.OnDataBinding("IpDetailGrid_OnDataBinding"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
   <script type="text/javascript">
       // function IpDetailGrid_OnDataBinding(e) {
        //    e.data = {
       //     };
        //} 
    </script>
</fieldset>
*@