@model com.Sconit.Entity.ORD.OrderMaster
@Html.Partial("_AjaxMessage") 
<script type="text/javascript">
    function OrderQuery(e) {
        ClearMessage();
        if ($("#orderNo").val() == "" || $("#orderNo").val() == undefined) {
            $message.error('请根据订单号进行查询。');
        }
        else {
            var data = { "orderNo": $("#orderNo").val() };
            $.ajax({
                type: "Post",
                dataType: "html",
                data: data,
                url: "@Url.Content("~/Hu/OrderDetailList/")",
                cache: false,
                success: function (data, textStatus) {
                    var tabStrip = $("#TabStrip");
                    var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                    $(tabStripContent2).html(data);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }

    }

    function onCreateByOrderDetail(isExport) {
        ClearMessage();
        var grid = $("#OrderDetail").data("tGrid");
        if (grid == null || grid == undefined) {
            $message.error('打印明细不能为空。');
            return;
        }
        var rows = grid.$tbody.children("tr:not(.t-no-data)");
        var idStr = "";
        var ucStr = "";
        var qtyStr = "";
        var supplierLotNoStr = "";

        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var huQty = row.find("#HuQty").val();
            if (huQty != "" && huQty != 0) {
                var id = row.find("#Id").val();
                var uc = row.find("#UnitCount").val();
                if (uc == "" || uc == undefined) {
                    uc = $(row.find("#UnitCount")).attr("key")
                }
                if (uc == "" || uc == undefined) {
                    $message.error('第' + (rowIndex + 1) + '行单包装不能为空。');
                    return;
                }
                var isChangeUC = row.find("#IsChangeUnitCount").val();

                if (isChangeUC == "false" && parseFloat(huQty) % parseFloat(uc) > 0) {
                    $message.error('行' + (rowIndex + 1).toString() + '的数量' + huQty.toString("0.##") + '不是单包装' + uc.toString("0.##") + '的整数倍.');
                    return;
                }
                var supplierLotNo = row.find("#SupplierLotNo").val();
                if (idStr == "") {
                    idStr = id;
                    ucStr = uc;
                    supplierLotNoStr = supplierLotNo;
                    qtyStr = huQty;
                } else {
                    idStr += "," + id;
                    ucStr += "," + uc;
                    supplierLotNoStr += "," + supplierLotNo;
                    qtyStr += "," + huQty;
                }

            }
        }
        if (idStr == "") {
            $message.error('明细不能为空.');
            return;
        }

        if (isExport) {
            $("#OrderDetailidStr").val(idStr);
            $("#OrderDetailucStr").val(ucStr);
            $("#OrderDetailsupplierLotNoStr").val(supplierLotNoStr);
            $("#OrderDetailqtyStr").val(qtyStr);
            $("#OrderDetailisExport").val(isExport);
            $("#hiddenOrderDetailForm").submit();
        } else {
            var data = {
                "OrderDetailidStr": idStr,
                "OrderDetailucStr": ucStr,
                "OrderDetailsupplierLotNoStr": supplierLotNoStr,
                "OrderDetailqtyStr": qtyStr,
                "OrderDetailisExport": isExport
            }
            $.ajax({
                type: "post",
                dataType: "Json",
                data: data,
                async: false,
                url: "@Url.Content("~/Hu/CreateHuByOrderDetail/")",
                cache: false,
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    if (data.Data.PrintUrl != "") {
                        PrintOrder(data.Data.PrintUrl);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest);
                }
            });
        }

    }

  
</script>

    <fieldset>
        <div class="search">
            <div class="search-label">
                <label for="Hu_OrderNo">
                    @Html.LabelFor(model => model.OrderNo)
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("orderNo", ViewBag.OrderNo != null ? (string)ViewBag.OrderNo : string.Empty)
            </div>
            <div class="search-label">
            </div>
            <div class="search-field">
            </div>
        </div>
        <div class="editor-footer">
         <button type="button" id="Search" onclick="OrderQuery()">
                @Resources.Global.Button_Search</button>
           @Html.Button(Resources.Global.Button_Print, "Url_Inventory_Hu_New", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnPrint"},
                    {"needconfirm","true"},
                    {"onclick","onCreateByOrderDetail(false)"}
	            })
                 @Html.Button(Resources.Global.Button_Export, "Url_Inventory_Hu_New", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnExport"},
                    {"needconfirm","true"},
                    {"onclick","onCreateByOrderDetail(true)"}
	            })
        </div>
    </fieldset>
    <form id="hiddenOrderDetailForm" action="/Hu/CreateHuByOrderDetail" target="_blank"  method="post">
        <input id="OrderDetailqtyStr" name="OrderDetailqtyStr" type="hidden" />
        <input id="OrderDetailucStr"  name="OrderDetailucStr" type="hidden" />
        <input id="OrderDetailidStr" name="OrderDetailidStr" type="hidden" />
        <input id="OrderDetailsupplierLotNoStr" name="OrderDetailsupplierLotNoStr" type="hidden" />
        <input id="OrderDetailisExport" name="OrderDetailisExport" type="hidden" />
    </form>
    <div id="divOrderDeatil">
    </div>
