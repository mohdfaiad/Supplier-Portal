@model IEnumerable<com.Sconit.Entity.ORD.OrderMaster>
<script type="text/javascript">

    function ReceiveVanOrderClick(e) {
        $(e).attr('href', 'javascript:void(0);');
        if (confirm("是否确定该操作？")) {
            var data = {
                "id": $(e).parent().parent().children().eq(0).text(),
                "isForce": false
            };
            $.ajax({
                type: "post",
                dataType: "json",
                url: "@Url.Content("~/ProductionOrder/VanReceive/")",
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    $.ajax({
                        type: "get",
                        dataType: "html",
                        url: "@Url.Content("~/ProductionOrder/ReceiveList/")",
                        data: {
                            OrderNo: $('#OrderNo').val(),
                            TraceCode: $('#TraceCode').val(),
                            Flow: $('#Flow').val(),
                            isFromList: true
                        },
                        cache: false,
                        success: function (data, textStatus) {
                            $('#content').html(data);
                        }
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }
    }
</script>
<fieldset>
    @(Html.Telerik().Grid(Model)
        .Name("OrderMasterGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.OrderNo);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.OrderNo).ClientTemplate(Html.ActionLink("<#= OrderNo #>", "ReceiveEdit", "ProductionOrder", new { orderNo = "<#= OrderNo #>" }, null).ToString());
            columns.Bound(o => o.TraceCode);
            columns.Bound(o => o.Flow).Title(@Resources.ORD.OrderMaster.OrderMaster_Flow_Production);
            columns.Bound(o => o.OrderStatusDescription);
            columns.Bound(o => o.CurrentOperation);
            columns.Bound(o => o.ShipFromContact).Title(Resources.ORD.OrderDetail.OrderDetail_Item);
            columns.Bound(o => o.ShipFromAddress).Title(Resources.ORD.OrderDetail.OrderDetail_ItemDescription);
            columns.Bound(o => o.ShipFromFax).Title(Resources.ORD.OrderDetail.OrderDetail_Uom);
            columns.Command(commands =>
            {
                commands.Custom("ReceiveVanOrder").Text(Resources.Global.Button_OffLine)
                        .HtmlAttributes(new { onClick = "ReceiveVanOrderClick(this)", id = "ReceiveVanOrder", href = "#" });
            });
        })
        .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
                .DataBinding(dataBinding => dataBinding.Ajax().Select("_ReceiveAjaxList", "ProductionOrder"))
                 .ClientEvents(events => events.OnDataBinding("OrderMasterGrid_OnDataBinding"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
    <script type="text/javascript">
        function OrderMasterGrid_OnDataBinding(e) {
            e.data = {
                OrderNo: $('#OrderNo').val(),
                TraceCode: $('#TraceCode').val(),
                Flow: $('#Flow').val()
            };
        } 
    </script>
</fieldset>
