@model IEnumerable<com.Sconit.Entity.SCM.Quota>
<fieldset>
    @using (Html.BeginForm("Save", "Quota"))
    {
        @(Html.Telerik().Grid(Model)
        .Name("FlowDetail")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Hidden(true);//.ClientTemplate("<input type='text' id='Id' name='Id'  style='display:none' value='<#= Id #>'/>");
            columns.Bound(o => o.Supplier).ReadOnly();
            columns.Bound(o => o.SupplierName).ReadOnly();
            columns.Bound(o => o.SupplierShortCode).ReadOnly();
            columns.Bound(o => o.Item).ReadOnly();
            columns.Bound(o => o.ItemDesc).ReadOnly();
            columns.Bound(o => o.RefItemCode).ReadOnly();
            columns.Bound(o => o.Weight).ReadOnly();
            columns.Bound(o => o.AccumulateQty).ReadOnly();
            columns.Bound(o => o.CycleQty).ReadOnly();
            columns.Bound(o => o.AdjQty);
            columns.Bound(o => o.LastModifyDate).ReadOnly();
            columns.Bound(o => o.LastModifyUserName).ReadOnly();
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.ImageAndText);
            });
        })
        .Scrollable(c => c.Enabled(false))
        .Sortable()
        .EnableCustomBinding(true)

                .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxList", "Quota").Update("_Update", "Quota", new { ItemCode = ViewBag.ItemCode }))
            .ClientEvents(events => events.OnDataBinding("QuotaGrid_OnDataBinding").OnComplete("TelerikGridView_OnComplete"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(20);
        })
        .Resizable(resizing => resizing.Columns(true))
        .Footer(true)
    )
       @* <label>
        </label>
        <p>
            <button type="button" id="btnInproportion" onclick="onbtnInproportionClick()">@Resources.MRP.Quota.Quota_Button_Inproportion</button>
            <button type="button" id="btnClear" onclick="onbtnClear()">@Resources.MRP.Quota.Quota_Button_Clear</button>
            <button type="button" id="btnSave" onclick="onbtnSave()">@Resources.Global.Button_Save</button>
        </p>*@
    }
</fieldset>
<script type="text/javascript">
    function QuotaGrid_OnDataBinding(e) {
        e.data = {
            ItemCode: $('#ItemCode').val()
        };
    } 

    function onbtnInproportionClick(e) {
        var grid = $("#FlowDetail").data("tGrid");
        var rows = grid.$tbody.children("tr:not(.t-no-data)");
        var idStr = "";
        //        var adjQtyStr = "";
        //        var weightStr = "";
        //        var totalQtyStr=""
        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var id = row.find("input:first").val();
            //            var adjQty = row.find("input:last").val();
            //            var weight = row.find("label:first").html().toString();
            //            var totalQty = row.find("label:last").html().toString();
            if (id != undefined && id != null && id != "") {
                if (idStr == "") {
                    idStr = id;
                    //                    adjQtyStr = adjQty;
                    //                    weightStr = weight;
                    //                    totalQtyStr = totalQty;
                } else {
                    idStr += "," + id;
                    //                    adjQtyStr += "," + adjQty;
                    //                    weightStr += "," + weight;
                    //                    totalQtyStr += "," + totalQty;
                }
            }
        }
        var data = {
            "Location": $("#Location").val(),
            "Item": $("#Item").val(),
            "idStr": idStr
            //            "adjQtyStr": adjQtyStr,
            //            "weightStr":weightStr,
            //            "totalQtyStr":totalQtyStr
        }
        $.ajax({
            type: "post",
            dataType: "json",
            data: data,
            url: "@Url.Content("~/Quota/Inproportion/")",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/Quota/List/")",
                    cache: false,
                    success: function (data, textStatus) {
                        var $tGrid = $("#content");
                        $($tGrid).html(data);
                    }
                });
            },

            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

    function onbtnClear(e) {
        var grid = $("#FlowDetail").data("tGrid");
        var rows = grid.$tbody.children("tr:not(.t-no-data)");
        var idStr = "";
        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var id = row.find("input:first").val();
            if (id != undefined && id != null && id != "") {
                if (idStr == "") {
                    idStr = id;
                } else {
                    idStr += "," + id;
                }
            }
        }
        var data = {
            "Location": $("#Location").val(),
            "Item": $("#Item").val(),
            "idStr": idStr
        }
        $.ajax({
            type: "post",
            dataType: "json",
            data: data,
            url: "@Url.Content("~/Quota/Clear/")",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/Quota/List/")",
                    cache: false,
                    success: function (data, textStatus) {
                        var $tGrid = $("#content");
                        $($tGrid).html(data);
                    }
                });
            },

            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

    function onbtnSave(e) {
        var grid = $("#FlowDetail").data("tGrid");
        var rows = grid.$tbody.children("tr:not(.t-no-data)");
        var idStr = "";
        var adjQtyStr = "";
        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var id = row.find("input:first").val();
            var adjQty = row.find("input:last").val();
            if (id != undefined && id != null && id != "") {
                if (idStr == "") {
                    idStr = id;
                    adjQtyStr = adjQty;
                } else {
                    idStr += "," + id;
                    adjQtyStr += "," + adjQty;

                }
            }
        }
        var data = {
            "Location": $("#Location").val(),
            "Item": $("#Item").val(),
            "idStr": idStr,
            "adjQtyStr": adjQtyStr
        };
        $.ajax({
            type: "post",
            dataType: "json",
            data: data,
            url: "@Url.Content("~/Quota/Save/")",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/Quota/List/")",
                    cache: false,
                    success: function (data, textStatus) {
                        var $tGrid = $("#content");
                        $($tGrid).html(data);
                    }
                });
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }
</script>
