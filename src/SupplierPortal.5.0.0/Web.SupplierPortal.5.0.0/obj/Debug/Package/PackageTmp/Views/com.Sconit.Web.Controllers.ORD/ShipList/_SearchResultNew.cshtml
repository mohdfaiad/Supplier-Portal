@using com.Sconit.Web.Models.SearchModels.ORD;
@model IEnumerable<com.Sconit.Entity.ORD.IpMaster>
<script type="text/javascript">
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            var $checkRecords = $("input[name='checkedRecords']");
            var showButton = false;
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    showButton = true;
                    break;
                }
            }
            if (showButton) {
                $("#btnCreate").removeAttr("disabled");
            } else {
                $("#btnCreate").attr("disabled", "disabled");
            }
        });
    });

        function showButtons() {
            var $checkRecords = $("input[name='checkedRecords']");
            var showButton = false;
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    showButton = true;
                    break;
                }
            }
            $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
            if (showButton) {
                $("#btnCreate").removeAttr("disabled");
            } else {
                $("#btnCreate").attr("disabled", "disabled");
            }
        }

        function btnCreate_Click() {
//            var shipper2 = $('#Shipper2').val();
//            if (shipper2 == "" || shipper2 == undefined) {
//                alert("请选择承运商！");
//                return false;
//            }

            var $checkRecords = $("input[name='checkedRecords']");
            var idStr = "";
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    var id = $checkRecords[i].value;
                    if (idStr == "") {
                        idStr = id;
                    } else {
                        idStr += "," + id;
                    }
                }
            }

            var data = {
                Vehicle: $('#Vehicle2').val(),
                Shipper: $('#Shipper2').val(),
                ChosenIds: idStr
            };

            $.ajax({
                type: "post",
                dataType: "json",
                url: "@Url.Content("~/ShipList/CreateShipList/")",
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    $("#btnCreate").attr("disabled", "disabled");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }
</script>
<fieldset>
@using (Html.BeginForm())
    {
    ShipListSearchModel searchModel = ViewBag.SearchModel;
    @Html.Hidden("Vehicle2", searchModel.Vehicle)
    <div class="search-footer">
        <table>
            <tr>
                <td>
                 @{
                Html.RenderAction("_ShipperComboBox", "Common", new
                   {
                       controlName = "Shipper2",
                       checkLocation = false,
                       selectedValue = string.Empty
                   });
                }
                </td>
                <td>
                    @Html.Button(Resources.Global.Button_Create, "Url_ShipList_New", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnCreate"},
                {"onclick","btnCreate_Click()"},
                {"disabled", "disabled"}
	        })
                </td>
            </tr>
        </table>
    </div>
    }
    @(Html.Telerik().Grid(Model)
        .Name("IpListGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.ShipNo);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.IpNo).ReadOnly(true)
                .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= IpNo #>' onClick='showButtons()'   />")
                .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
                .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.IpNo);
            columns.Bound(o => o.Vehicle);
            columns.Bound(o => o.PartyFromName);
            columns.Bound(o => o.PartyToName);
            columns.Bound(o => o.CreateUserName);
            columns.Bound(o => o.CreateDate);
       })
        .Scrollable(c => c.Enabled(false))
                .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxListNew", "ShipList"))
                        .ClientEvents(events => events.OnDataBinding("IpListGrid_OnDataBinding"))
                .EnableCustomBinding(true)
                .Sortable()
                .Resizable(resizing => resizing.Columns(true))
        )
    <script type="text/javascript">
        function IpListGrid_OnDataBinding(e) {
            e.data = {
                Vehicle: $('#Vehicle').val()
            }
        }
    </script>
</fieldset>
