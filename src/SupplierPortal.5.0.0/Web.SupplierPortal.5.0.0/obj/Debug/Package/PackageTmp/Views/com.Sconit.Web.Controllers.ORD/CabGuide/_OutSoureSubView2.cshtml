@model IEnumerable<com.Sconit.Entity.ORD.CabProductionView>
<script type="text/javascript">

    function CabOutClick(e) {
        $(e).attr('href', 'javascript:void(0);');
        if (confirm('确认要出库吗？')) {
            var orderNo = $(e).parent().prev().html();
            $.ajax({
                type: "post",
                dataType: "json",
                url: "@Url.Content("~/CabGuide/CabOut/")",
                cache: false,
                data: { orderNo: orderNo, type: '@(com.Sconit.CodeMaster.CabType.Purchase)' },
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    if (data != "") {
                        PrintOrder(data.Data.PrintUrl);
                    }

                    $.ajax({
                        type: "get",
                        dataType: "html",
                        url: "@Url.Content("~/CabGuide/OutSoureSubViewIndex/")",
                        cache: false,
                        success: function (data, textStatus) {
                            $('#content').html(data);
                        }
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }
    }

</script>
<fieldset>
    <legend>RAC00</legend>
    @(Html.Telerik().Grid(Model)
          .Name("OutSoureViewGrid1")
          .DataKeys(keys =>
                        {
                            keys.Add(p => p.OrderDetailId);
                        })
          .Columns(columns =>
          {
              columns.Bound(o => o.Sequence);
              columns.Bound(o => o.SubSequence);
              columns.Bound(o => o.TraceCode);
              columns.Bound(o => o.Model);
              columns.Bound(o => o.ModelDescription);
              columns.Bound(o => o.Item);
              columns.Bound(o => o.ItemDesc);
              columns.Bound(o => o.StartTime);
              columns.Bound(o => o.Flow);
              columns.Bound(o => o.OrderNo).Hidden();
              columns.Command(
                  commands =>
                  {
                      commands.Custom("CabOut").Text("出库").HtmlAttributes(new { onClick = "CabOutClick(this)", id = "CabOutOrder" });
                  }
                  );
          })
          .Scrollable(c => c.Enabled(false))
                  .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxOutSoureViewList", "CabGuide", new RouteValueDictionary { { "Type", (int)com.Sconit.CodeMaster.CabType.Purchase }, { "IsOut", "false" }, { "Flow", "RAC00" } }))
          .Pageable(settings =>
                        {
                            settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
                            settings.PageSize(ViewBag.PageSize);
                        })
          .EnableCustomBinding(true)
          .Sortable()
          .Resizable(resizing => resizing.Columns(true)))
</fieldset>
<fieldset>
    <legend>RAD00</legend>
    @(Html.Telerik().Grid(Model)
          .Name("OutSoureViewGrid2")
          .DataKeys(keys =>
                        {
                            keys.Add(p => p.OrderDetailId);
                        })
          .Columns(columns =>
          {
              columns.Bound(o => o.Sequence);
              columns.Bound(o => o.SubSequence);
              columns.Bound(o => o.TraceCode);
              columns.Bound(o => o.Model);
              columns.Bound(o => o.ModelDescription);
              columns.Bound(o => o.Item);
              columns.Bound(o => o.ItemDesc);
              columns.Bound(o => o.StartTime);
              columns.Bound(o => o.Flow);
              columns.Bound(o => o.OrderNo).Hidden();
              columns.Command(
                  commands =>
                  {
                      commands.Custom("CabOut").Text("出库").HtmlAttributes(new { onClick = "CabOutClick(this)", id = "CabOutOrder" });
                  }
                  );
          })
          .Scrollable(c => c.Enabled(false))
                  .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxOutSoureViewList", "CabGuide", new RouteValueDictionary { { "Type", (int)com.Sconit.CodeMaster.CabType.Purchase }, { "IsOut", "false" }, { "Flow", "RAD00" } }))
          .Pageable(settings =>
                        {
                            settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
                            settings.PageSize(ViewBag.PageSize);
                        })
          .EnableCustomBinding(true)
          .Sortable()
          .Resizable(resizing => resizing.Columns(true)))</fieldset>
