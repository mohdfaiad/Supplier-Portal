@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.PRD.BomDetail
           @Html.Partial("_AjaxMessage")
@using (Html.BeginForm())
{
    <fieldset>
    <legend>@Resources.PRD.Bom.BomDetail_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
               @Html.LabelFor(model => model.Bom)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_BomComboBox", "Common", new { controlName = "Bom" });
                 }
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.Item)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_ItemComboBox", "Common", new { controlName = "Item" });
                 }
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.Operation)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Operation)
                @Html.ValidationMessageFor(model => model.Operation)
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.OpReference)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.OpReference)
                @Html.ValidationMessageFor(model => model.OpReference)
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.StartDate)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.EndDate)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().DateTimePickerFor(model => model.EndDate) 
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.RateQty)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.RateQty)
                @Html.ValidationMessageFor(model => model.RateQty)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Uom)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_UomDropDownList", "Common", new { controlName = "Uom", controlId = "DetailUom" });
                }
                @Html.ValidationMessageFor(model => model.Uom)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.BackFlushMethod)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new { code = com.Sconit.CodeMaster.CodeMaster.BackFlushMethod,
                                                                                 controlName = "BackFlushMethod"
                                                      
                    });
                }
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.FeedMethod)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new { code = com.Sconit.CodeMaster.CodeMaster.FeedMethod,
                                                                                 controlName = "FeedMethod"
                                                      
                    });
                }
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.StructureType)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new{ code = com.Sconit.CodeMaster.CodeMaster.BomStructureType,
                                                                                controlName = "StructureType"
                                                      
                    });
                }
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.ScrapPercentage)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.ScrapPercentage)<em>%</em>
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.IsPrint)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.IsPrint)
            </div>

            <div class="editor-label-2">
               @Html.LabelFor(model => model.IsAutoFeed)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.IsAutoFeed)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Location)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_LocationComboBox", "Common", new { controlName = "Location" });
                }
            </div>

        </div>
        <div class="editor-footer">
           @* <button type="button" id="btnNew_BomDetail" onclick="btnNew_BomDetail_Click();">
                @Resources.Global.Button_New</button>*@
             @Html.Button(Resources.Global.Button_New, "Url_Bom_Edit", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnNew_BomDetail"},
                {"needconfirm","true"},
                {"onclick","btnNew_BomDetail_Click()"}
	        })
            <button type="button" id="btnBack_BomDetail" onclick="btnBack_BomDetail_Click();">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
}
<script type="text/javascript">
    function btnBack_BomDetail_Click() {
        $.ajax({
            type: "get",
            dataType: "html",
            url: "@Url.Content("~/Bom/List_Detail/")",
            data: "",
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent1 = tabStrip.data("tTabStrip").getContentElement(1);
                //alert(data);
                $(tabStripContent1).html(data);
            }
        });
    }

    function btnNew_BomDetail_Click() 
    {
        var data = {
            "Bom": $("#Bom").val(),
            "Item": $("#Item").val(),
            "Operation": $("#Operation").val(),
            "OpReference": $("#OpReference").val(),
            "StartDate": $("#StartDate").val(),
            "EndDate": $("#EndDate").val(),
            "RateQty": $("#RateQty").val(),
            "Uom": $("#DetailUom").val(),
            "BackFlushMethod": $("#BackFlushMethod").val(),
            "FeedMethod": $("#FeedMethod").val(),
            "StructureType": $("#StructureType").val(),
            "ScrapPercentage": $("#ScrapPercentage").val(),
            "IsPrint": $("#IsPrint").is(':checked'),
            "IsAutoFeed": $("#IsAutoFeed").is(':checked'),
            "Location": $("#Location").val()
        };
        $.ajax({
            type: "post",
            dataType: "html",
            url: "@Url.Content("~/Bom/_New_Detail/")",
            data: data,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent1 = tabStrip.data("tTabStrip").getContentElement(1);
                $(tabStripContent1).html(data);
            }
        });
    }

</script>
