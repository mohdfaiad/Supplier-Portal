@using com.Sconit.Web.Models.SearchModels.ORD
<script src="@Url.Content("~/Scripts/jquery.ui.core.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.ui.widget.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.multiselect.js")" type="text/javascript"></script>
@*<link href="@Url.Content("~/Content/jqueryui/jquery-ui.min.css")" rel="stylesheet" type="text/css" />*@
<link href="@Url.Content("~/Content/jqueryui/jquery.multiselect.css")" rel="stylesheet" type="text/css" />

<fieldset>
    @using (Html.BeginForm("DetailReceiveList", "ProcurementOrder"))
    {   
        <div class="search">
             <div class="search-label">
                <label for="OrderMaster_PartyFrom">
                    @Resources.ORD.OrderMaster.OrderMaster_PartyFrom
                </label>
            </div>
            <div class="search-field">
            @Html.TextArea("MultiPartyFrom", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).MultiPartyFrom : string.Empty, new { rows = 3, style = "min-height:0;width:200px" })
            </div>
          
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.OrderMaster.OrderMaster_OrderNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("OrderNo", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).OrderNo : string.Empty)
            </div>
              <div class="search-label">
                <label for="OrderMaster_Flow">
                   @* @Resources.ORD.IpMaster.IpMaster_Flow*@
                </label>
            </div>
            <div class="search-field">
                @*@{
        Html.RenderAction("_FlowComboBox", "Common",
            new
            {
                controlName = "Flow",
                type = (int)com.Sconit.CodeMaster.OrderType.Procurement,
                selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Flow : string.Empty
            });
                }*@
            </div>
           
            <div class="search-label">
                <label for="OrderMaster_PartyTo">
                    @Resources.ORD.OrderMaster.OrderMaster_PartyTo
                </label>
            </div>
            <div class="search-field">
               @* @{
               Html.RenderAction("_OrderMasterPartyToComboBox", "Common",
                               new
                               {
                                   controlName = "PartyTo",
                                   orderType = (int)com.Sconit.CodeMaster.OrderType.Procurement,
                                   selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).PartyTo : string.Empty
                               });
                }*@
                 @{
        Html.RenderAction("_RegionMultiSelectBox", "Common", new
         {
             checkedValues = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).MultiPartyTo : null,
             orderType = (int)com.Sconit.CodeMaster.OrderType.Production,
             controlName = "MultiPartyTos",
             controlId = "MultiPartyTos"
         });
          }
          @Html.Hidden("MultiPartyTo")
            </div>
             <div class="search-label">
              <label>
                    @*@Resources.ORD.OrderDetail.OrderDetail_LocationFrom*@
                    发货库位
            </label>
            </div>
            <div class="editor-field-2">
                @{
        Html.RenderAction("_LocationComboBox", "Common", new
        {
            controlName = "LocationFrom",
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).LocationFrom : string.Empty

        });
                }
            </div>
             <div class="search-label">
              <label>
                    @Resources.ORD.OrderDetail.OrderDetail_LocationTo
            </label>
            </div>
            <div class="editor-field-2">
                @{
        Html.RenderAction("_LocationComboBox", "Common", new
        {
            controlName = "LocationTo",
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).LocationTo : string.Empty

        });
                }
            </div>
           <div class="editor-label-2">
                <label>@Resources.ORD.OrderMaster.OrderMaster_OrderStrategy</label>
            </div>
            <div class="editor-field-2">
                 @{
        Html.RenderAction("_CodeMasterDropDownList", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.FlowStrategy,
            controlName = "OrderStrategy",
            includeBlankOption = true,
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).OrderStrategy : null
        });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_Status">
                    @Resources.ORD.OrderMaster.OrderMaster_Status
                </label>
            </div>
            <div class="search-field">
              @*  @{
               Html.RenderAction("_CodeMasterDropDownList", "Common", new
               {
                   code = com.Sconit.CodeMaster.CodeMaster.OrderStatus,
                   controlName = "Status",
                   includeBlankOption = true,
                   selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Status : 1
               });
                }*@
                 @{
          Html.RenderAction("_CodeMasterMultiSelectBox", "Common", new
         {
             checkedValues = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).MultiStatus : "1",
             code = com.Sconit.CodeMaster.CodeMaster.OrderStatus,
             controlName = "MultiSelectStatus",
             controlId = "MultiSelectStatus"
         });
          }
          @Html.Hidden("MultiStatus", "1")
            </div>
            
         
            
            <div class="search-label">
                <label for="OrderMaster_PartyTo">
                    订单类型
                </label>
            </div>
            <div class="search-field">
                 @{
          Html.RenderAction("_CodeMasterMultiSelectBox", "Common", new
         {
             checkedValues = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).OrderTypes : string.Empty,
             code = com.Sconit.CodeMaster.CodeMaster.OrderType,
             isProcurement = true,
             controlName = "MultiOrderTypes",
             controlId = "MultiOrderTypes"
         });
          }
          @Html.Hidden("OrderTypes")
            </div>
           <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.OrderMaster.OrderMaster_Item
                </label>
            </div>
            <div class="search-field">
                @{
               Html.RenderAction("_ItemComboBox", "Common",
                   new
                   {
                       controlName = "Item",
                       selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Item : string.Empty
                   });
                    
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateFrom">
                    创建日期 从
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DateTimePicker().Format(com.Sconit.Entity.BusinessConstants.LONG_DATE_FORMAT)
                .Name("DateFrom")
            .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateFrom : System.DateTime.Now.AddDays(-7))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                    至
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DateTimePicker().Format(com.Sconit.Entity.BusinessConstants.LONG_DATE_FORMAT)
                .Name("DateTo")
            .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateTo : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>

            <div class="search-label">
                <label for="OrderMaster_DateFrom">
                    窗口时间 从
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DateTimePicker().Format(com.Sconit.Entity.BusinessConstants.LONG_DATE_FORMAT)
            .Name("WindowTimeFrom")
            .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).WindowTimeFrom : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                   至
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DateTimePicker().Format(com.Sconit.Entity.BusinessConstants.LONG_DATE_FORMAT)
            .Name("WindowTimeTo")
            .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).WindowTimeTo : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            
              <div class="search-label">
                <label for="OrderMaster_Flow">
                    @Resources.ORD.IpMaster.IpMaster_Flow
                </label>
            </div>
            <div class="search-field">
           @* @Html.TextArea("MultiFlow", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).MultiFlow : string.Empty, new { rows = 2, style = "min-height:0;width:200px" })*@
                @{
        Html.RenderAction("_FlowComboBox", "Common",
            new
            {
                controlName = "Flow",
                type = (int)com.Sconit.CodeMaster.OrderType.Procurement,
                selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Flow : string.Empty
            });
                }
            </div>
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.Global.Button_Search</button>
              <button type="button" id="btnExport" >
                @Resources.Global.Button_Export</button>
        </div>

    }
</fieldset>

<script type="text/javascript">
    var t = "";
    $('#btnSearch').click(function () {

        if (t != "") {
            $('form').attr('action', t);
        }
        $('form').submit();
    });
    $('#btnExport').click(function () {

        if (t == "") {
            t = $('form').attr('action');
        }
        $('form').attr('action', "/ProcurementOrder/ExportDetailRec/");
        $('form').submit();
    });

    function FlowStrategy_Change()
    { }
    $(function () {
        $('#MultiSelectStatus').multiselect({
            noneSelectedText: "选择状态...",
            selectedText: "已选#个状态",
            checkAllText: "全选",
            uncheckAllText: "取消全选",
            selectedList: 3,
            click: function (event, ui) {
                $('#MultiStatus').attr("value", getMultiStatus());
            },
            checkAll: function () {
                $('#MultiStatus').attr("value", getMultiStatus());
            },
            uncheckAll: function () {
                $('#MultiStatus').attr("value", getMultiStatus());
            }
        });
    });



    function getMultiStatus() {
        var m = "";
        var array_of_checked_values = $("#MultiSelectStatus").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        if (array_of_checked_values != null) {
            if (array_of_checked_values.length > 0) {
                m = array_of_checked_values[0];
                for (var i = 1; i < array_of_checked_values.length; i++) {
                    m = m + "," + array_of_checked_values[i];
                };
            }
        }
        return m;
    }

    $(function () {
        $('#MultiPartyFroms').multiselect({
            noneSelectedText: "选择发货方代码...",
            selectedText: "已选#个状态",
            checkAllText: "全选",
            uncheckAllText: "取消全选",
            selectedList: 3,
            click: function (event, ui) {
                $('#MultiPartyFrom').attr("value", getMultiPartyFroms());
            },
            checkAll: function () {
                $('#MultiPartyFrom').attr("value", getMultiPartyFroms());
            },
            uncheckAll: function () {
                $('#MultiPartyFrom').attr("value", getMultiPartyFroms());
            }
        });
    });

    function getMultiPartyFroms() {
        var m = "";
        var array_of_checked_values = $("#MultiPartyFroms").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        if (array_of_checked_values != null) {
            if (array_of_checked_values.length > 0) {
                m = array_of_checked_values[0];
                for (var i = 1; i < array_of_checked_values.length; i++) {
                    m = m + "," + array_of_checked_values[i];
                };
            }
        }
        return m;
    }


    $(function () {
        $('#MultiPartyTos').multiselect({
            noneSelectedText: "选择收货方代码...",
            selectedText: "已选#个状态",
            checkAllText: "全选",
            uncheckAllText: "取消全选",
            selectedList: 3,
            click: function (event, ui) {
                $('#MultiPartyTo').attr("value", getMultiPartyTos());
            },
            checkAll: function () {
                $('#MultiPartyTo').attr("value", getMultiPartyTos());
            },
            uncheckAll: function () {
                $('#MultiPartyTo').attr("value", getMultiPartyTos());
            }
        });
    });

    function getMultiPartyTos() {
        var m = "";
        var array_of_checked_values = $("#MultiPartyTos").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        if (array_of_checked_values != null) {
            if (array_of_checked_values.length > 0) {
                m = array_of_checked_values[0];
                for (var i = 1; i < array_of_checked_values.length; i++) {
                    m = m + "," + array_of_checked_values[i];
                };
            }
        }
        return m;
    }


    $(function () {
        $('#MultiOrderTypes').multiselect({
            noneSelectedText: "选择类型...",
            selectedText: "已选#个类型",
            checkAllText: "全选",
            uncheckAllText: "取消全选",
            selectedList: 3,
            click: function (event, ui) {
                $('#OrderTypes').attr("value", getMultiOrderType());
            },
            checkAll: function () {
                $('#OrderTypes').attr("value", getMultiOrderType());
            },
            uncheckAll: function () {
                $('#OrderTypes').attr("value", getMultiOrderType());
            }
        });
    });
    function getMultiOrderType() {
        var m = "";
        var array_of_checked_values = $("#MultiOrderTypes").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        if (array_of_checked_values != null) {
            if (array_of_checked_values.length > 0) {
                m = array_of_checked_values[0];
                for (var i = 1; i < array_of_checked_values.length; i++) {
                    m = m + "," + array_of_checked_values[i];
                };
            }
        }
        return m;
    }
</script>
