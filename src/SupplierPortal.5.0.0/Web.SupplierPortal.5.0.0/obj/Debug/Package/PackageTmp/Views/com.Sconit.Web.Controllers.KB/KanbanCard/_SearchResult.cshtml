@model IEnumerable<com.Sconit.Entity.KB.KanbanCard>
@{
    Layout = null;
}
<script type="text/javascript">
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            $("#btnPrint").attr("style", this.checked ? "display:inline" : "display:none");
        });
    });

    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
        $("#btnPrint").attr("style", showButton ? "display:inline" : "display:none");
    }
    function CheckedPrint() {
        var $checkRecords = $("input[name='checkedRecords']");
        var checkedCardNos = "";
        if ($("#checkAll").is(':checked') == true) {
            checkedCardNos = "ALL";
        }
        else {
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    if (checkedCardNos == "") {
                        checkedCardNos = $checkRecords[i].value;
                    } else {
                        checkedCardNos += "," + $checkRecords[i].value;
                    }
                }
            }
        }

        if (checkedCardNos == "") {
            alert('Must Check One');
            return;
        }

        var data = {
            cardNos: checkedCardNos,
            Supplier: $('#Supplier').val(),
            Region: $('#Region').val(),
            Item: $('#Item').val(),
            CardNo: $('#CardNo').val(),
            BinTo: $('#BinTo').val(),
            OpRefSequence: $('#OpRefSequence').val(),
            KBCalc: $('#KBCalc').val(),
            FreezeDate: $('#FreezeDate').val(),
            KitCount: $('#KitCount').val(),
            StartDate: $('#StartDate').val(),
            EndDate: $('#EndDate').val()
        };

        $.ajax({
            type: "post",
            dataType: "text",
            data: data,
            async: false,
            url: "@Url.Content("~/KanbanCard/PrintcardNos/")",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                if (data != "") {
                    var printUrl = data.split(',');
                    for (var i = 0; i < printUrl.length; i++) {
                        PrintOrder(printUrl[i]);
                    }

                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }
</script>
<fieldset>
    @(Html.Telerik().Grid(Model)
        .Name("FlowMasterGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.CardNo);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.CheckedCardNo).ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' onClick='showButtons();' value='<#= CardNo #>'   />")
               .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
               .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.CardNo).ClientTemplate(Html.ActionLink("<#= CardNo #>", "Edit", "KanbanCard", new { CardNo = "<#= CardNo #>" }, null).ToString()); ;
            columns.Bound(o => o.Flow);
            columns.Bound(o => o.OpRefSequence);
            columns.Bound(o => o.Supplier);
            columns.Bound(o => o.SupplierName);
            columns.Bound(o => o.Region);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.OpRef);
            columns.Bound(o => o.GroupDesc);
            columns.Bound(o => o.LocBin);
            columns.Bound(o => o.EffectiveDate);
            columns.Bound(o => o.Qty);
            columns.Bound(o => o.TotalCount);
            columns.Bound(o => o.LastUseDate);
        })

        .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
                .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxList", "KanbanCard"))
        .ClientEvents(events => events.OnDataBinding("KanbanGrid_OnDataBinding"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total != null ? ViewBag.Total : 1);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
    <script type="text/javascript">
        function KanbanGrid_OnDataBinding(e) {
            e.data = {
                Supplier: $('#Supplier').val(),
                Region: $('#Region').val(),
                Item: $('#Item').val(),
                CardNo: $('#CardNo').val(),
                BinTo: $('#BinTo').val(),
                OpRefSequence: $('#OpRefSequence').val(),
                KBCalc: $('#KBCalc').val(),
                FreezeDate: $('#FreezeDate').val(),
                KitCount: $('#KitCount').val(),
                StartDate: $('#StartDate').val(),
                EndDate: $('#EndDate').val()
                //                ,
                //                NeedReprint: $('#NeedReprint').attr('checked') == "checked" ? true : null
                //                ,
                //                ChildItemCount: $("input[type=radio][name=ChildItemCount]:checked").val()
            };
        } 
    </script>
</fieldset>
