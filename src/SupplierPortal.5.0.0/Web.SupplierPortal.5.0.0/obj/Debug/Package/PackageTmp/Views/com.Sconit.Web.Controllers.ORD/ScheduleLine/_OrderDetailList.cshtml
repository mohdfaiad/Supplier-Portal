@model IEnumerable<com.Sconit.Entity.ORD.OrderDetail>
<fieldset>
    @(Html.Telerik().Grid(Model)
        .DataKeys(keys =>
         {
             keys.Add(p => p.Item);
         })
        .Name("OrderDetailGrid")
        .DataBinding(dataBinding => dataBinding.Ajax()
        .Select("_AjaxListTo", "ScheduleLine", new { orderNo = ViewBag.OrderNo })
        .Update("_Update", "ScheduleLine", new { orderNo = ViewBag.OrderNo })
        .Delete("_Delete", "ScheduleLine", new { orderNo = ViewBag.OrderNo })
        )
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Width(0);
            columns.Bound(o => o.OrderNo).ReadOnly(true);
            columns.Bound(o => o.Item).Hidden();
            columns.Bound(o => o.Item).ReadOnly(true);
            columns.Bound(o => o.ItemDescription).ReadOnly(true);
            columns.Bound(o => o.Flow).ReadOnly(true);
            columns.Bound(o => o.ReferenceItemCode).ReadOnly(true);
            columns.Bound(o => o.UnitCount);
            columns.Bound(o => o.LocationTo).EditorTemplateName("LocationToGridForeignKey");
            columns.Bound(o => o.Uom).ReadOnly(true);
            columns.Bound(o => o.OrderedQty).ReadOnly(true);
            columns.Bound(o => o.ShippedQty).ReadOnly(true);
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Delete();
            });
        })
          .ClientEvents(events =>
          {
           events.OnDelete("onDelete");
          })
        .EnableCustomBinding(true)
        .Scrollable()
        .Sortable()
        .Resizable(resizing => resizing.Columns(true)))
        
                     
  </fieldset>
  <script type="text/javascript">
      function onLocationToDataBinding(e) {
          e.data = {
              "Region": $("#PartyTo").val(),
              "checkRegion": true,
              "isStockTakeLocation": false

          };
      }
      function onLocationToComboBoxChange(e) {
          if (e.value != null) {
              var combobox = $(this).data("tComboBox");
              if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                  combobox.value("");
                  combobox.reload();
              }
          }
      }

      function onDelete(e) {
          e.values.Item = $(e)[0].dataItem.Item;
      }
  
  </script>
