@using com.Sconit.Entity.ACC
@using com.Sconit.Web.Models.SearchModels.ORD
@using com.Sconit.Entity.SYS
@using com.Sconit.Entity.ORD
<script src="@Url.Content("~/Scripts/jquery.ui.core.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.ui.widget.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.multiselect.js")" type="text/javascript"></script>
@*<link href="@Url.Content("~/Content/jqueryui/jquery-ui.min.css")" rel="stylesheet" type="text/css" />*@
<link href="@Url.Content("~/Content/jqueryui/jquery.multiselect.css")" rel="stylesheet" type="text/css" />

<fieldset>
    @using (Html.BeginForm("List", "SequenceMaster"))
    {   
    @Html.Hidden("Url", (string)ViewBag.Url)
        <div class="search">
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.OrderMaster.OrderMaster_OrderNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("OrderNo", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).OrderNo : string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_Flow">
                    @Resources.ORD.OrderMaster.OrderMaster_Flow
                </label>
            </div>
            <div class="search-field">
                  @if ((string)ViewBag.Url == "Url_Supplier_SequenceOrder_View")
                  {
                      Html.RenderAction("_FlowComboBox", "Common",
                      new
                      {
                          controlName = "Flow",
                          isSupplier = true,
                          type = (int)com.Sconit.CodeMaster.OrderType.Procurement,
                          flowstrategy = (int)com.Sconit.CodeMaster.FlowStrategy.SEQ,
                          selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Flow : string.Empty
                      });
                      
                  }
                  else
                  {
                      Html.RenderAction("_FlowComboBox", "Common",
                            new
                            {
                                controlName = "Flow",
                                flowstrategy = (int)com.Sconit.CodeMaster.FlowStrategy.SEQ,
                                selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Flow : string.Empty
                            });
                  }
             
       
            </div>
            <div class="search-label">
                <label for="OrderMaster_PartyFrom">
                    @Resources.ORD.OrderMaster.OrderMaster_PartyFrom
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_OrderMasterPartyFromComboBox", "Common",
            new
            {
                controlName = "PartyFrom",
                orderType = (int)com.Sconit.CodeMaster.OrderType.Procurement,

                selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).PartyFrom : string.Empty
            });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_PartyTo">
                    @Resources.ORD.OrderMaster.OrderMaster_PartyTo
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_OrderMasterPartyToComboBox", "Common",
                        new
                        {
                            controlName = "PartyTo",
                            orderType = (int)com.Sconit.CodeMaster.OrderType.Procurement,
                            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).PartyTo : string.Empty
                        });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_Status">
                    @Resources.ORD.OrderMaster.OrderMaster_Status
                </label>
            </div>
            <div class="search-field">
            @*    @{
        Html.RenderAction("_CodeMasterDropDownList", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.OrderStatus,
            controlName = "Status",
            includeBlankOption = true,
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Status : null
        });
                }*@
                @{
          Html.RenderAction("_CodeMasterMultiSelectBox", "Common", new
         {
             checkedValues = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).MultiStatus : string.Empty,
             code = com.Sconit.CodeMaster.CodeMaster.OrderStatus,
             controlName = "MultiSelectStatus",
             controlId = "MultiSelectStatus"
         });
          }
          @Html.Hidden("MultiStatus", string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_Pirority">
                    @Resources.ORD.OrderMaster.OrderMaster_Priority
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_CodeMasterDropDownList", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.OrderPriority,
            controlName = "Priority",
            includeBlankOption = true,
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Priority : null
        });
                }
            </div>
            <div class="editor-label-2">
                <label>
                    @Resources.ORD.OrderMaster.OrderMaster_ExternalOrderNo
                </label>
            </div>
            <div class="editor-field-2">
                @Html.TextBox("ExternalOrderNo", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).ExternalOrderNo : string.Empty)
            </div>
            <div class="editor-label-2">
                <label>
                    @Resources.ORD.OrderMaster.OrderMaster_ReferenceOrderNo
                </label>
            </div>
            <div class="editor-field-2">
                @Html.TextBox("ReferenceOrderNo", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).ReferenceOrderNo : string.Empty)
            </div>
            
          
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.OrderMaster.OrderMaster_Item
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_ItemComboBox", "Common",
            new
            {
                controlName = "Item",
                selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Item : string.Empty
            });
                    
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_CreateUserName">
                    @Resources.ORD.OrderMaster.OrderMaster_CreateUserName
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("CreateUserName", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).CreateUserName : string.Empty)
            </div>
             <div class="search-label">
                <label for="OrderMaster_CreateUserName">
                    @Resources.ORD.OrderMaster.OrderMaster_SequenceGroup
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("SequenceGroup", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).SequenceGroup : string.Empty)
            </div>
             <div class="editor-label-2">
                <label>
                    @Resources.ORD.OrderDetail.OrderDetail_ExternalOrderNo_Export
                </label>
            </div>
            <div class="editor-field-2">
                @Html.TextBox("TraceCode", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).TraceCode : string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateFrom">
                    @Resources.ORD.OrderMaster.OrderMaster_DateFrom
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker()
                .Name("DateFrom").Format(com.Sconit.Entity.BusinessConstants.SHORT_DATE_FORMAT)
 .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateFrom : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                    @Resources.ORD.OrderMaster.OrderMaster_DateTo
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker().Format(com.Sconit.Entity.BusinessConstants.SHORT_DATE_FORMAT)
                .Name("DateTo")
         .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateTo : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                  
                </label>
            </div>
            <div class="search-field">
                &nbsp&nbsp
                显示未打印
                @Html.CheckBox("IsPrintOrder", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).IsPrintOrder : false)
            </div>
           
           
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.Global.Button_Search</button>
            <button type="button" id="btnExport" onclick="ExportClick()">
                @Resources.Global.Button_SearchExport</button>
                <button type="button" id="btnDetExport" onclick="ExportDetClick()" style="display:none" >
                @Resources.Global.Button_ExportDetail</button>
            <button type="button" id="btnPrint" onclick='PrintClick("@Url.Content("~/SequenceMaster/PrintOrders/"))' style="display:none" >
                @Resources.Global.Button_Print</button>
                <button type="button" id="btnExportPrint" onclick="ExportPrintClick()" style="display:none" >
                打印模板导出</button>
            <button type="button" id="btnComposePrint" onclick='PrintClick("@Url.Content("~/SequenceMaster/composePrintOrders/")' style="display:none" >
                合并打印</button>
        </div>
    }
    <script type="text/javascript">
        function ExportDetClick() {
            var $checkRecords = $("input[name='checkedRecords']");
            var checkedOrderNos = "";
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    if (checkedOrderNos == "") {
                        checkedOrderNos ="'"+ $checkRecords[i].value+"'";
                    } else {
                        checkedOrderNos += ",'" + $checkRecords[i].value + "'";
                    }
                }
            }

            if (checkedOrderNos == "") {
                alert('Must Check One');
                return;
            }
            location.href = "@Url.Content("~/SequenceMaster/ExportDetailXLS/?orderNos=")" + checkedOrderNos;
           
        }
        function PrintClick(url) {
            var $checkRecords = $("input[name='checkedRecords']");
            var checkedOrderNos = "";
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    if (checkedOrderNos == "") {
                        checkedOrderNos = $checkRecords[i].value;
                    } else {
                        checkedOrderNos += "," + $checkRecords[i].value;
                    }
                }
            }

            if (checkedOrderNos == "") {
                alert('Must Check One');
                return;
            }

            var data = {
                "orderNos": checkedOrderNos
            };
            $.ajax({
                type: "post",
                dataType: "text",
                data: data,
                async: false,
                url: url,
                cache: false,
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    if (data != "") {
                        var printUrl = data.split('||');
                        for (var i = 0; i < printUrl.length; i++) {
                            if (printUrl[i] != "") {
                                PrintOrder(printUrl[i]);
                            }
                        }
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }

        function ExportClick() {
            location.href = "@Url.Content("~/SequenceMaster/ExportMasterXLS/?OrderNo=")" + $('#OrderNo').val() + '&Flow=' + $('#Flow').val() + '&PartyFrom=' + $('#PartyFrom').val()
         + '&PartyTo=' + $('#PartyTo').val() + '&Priority=' + $('#Priority').val() + '&Status=' + $('#Status').val()
         + '&ExternalOrderNo=' + $('#ExternalOrderNo').val() + '&ReferenceOrderNo=' + $('#ReferenceOrderNo').val()
         + '&Item=' + $('#Item').val() + '&CreateUserName=' + $('#CreateUserName').val()
         + '&DateFrom=' + $('#DateFrom').val() + '&DateTo=' + $('#DateTo').val() + '&SequenceGroup=' + $('#SequenceGroup').val()
         + '&MultiStatus=' + $('#MultiStatus').val() ;
        }

        function ExportPrintClick() {
            var $checkRecords = $("input[name='checkedRecords']");
            var checkedOrderNos = "";
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    if (checkedOrderNos == "") {
                        checkedOrderNos = $checkRecords[i].value;
                    } else {
                        checkedOrderNos += "," + $checkRecords[i].value;
                    }
                }
            }

            if (checkedOrderNos == "") {
                alert('Must Check One');
                return;
            }

            var data = {
                "orderNos": checkedOrderNos
            };
            $.ajax({
                type: "post",
                dataType: "text",
                data: data,
                async: false,
                url: "@Url.Content("~/SequenceMaster/PrintOrders/")",
                cache: false,
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    if (data != "") {
                        var printUrl = data.split('||');
                        for (var i = 0; i < printUrl.length; i++) {
                            if (printUrl[i] != "") {
                                var url = printUrl[i].replace("//", "/");
                                url = url.replace("//", "/");
                                url = url.replace(":/", "://");
                                window.open(url, i+1+"", 'height=400,width=300,scrollbars=yes,status=yes')
                            }
                        }
                    }
                   
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }

        $(function () {
            $('#MultiSelectStatus').multiselect({
                noneSelectedText: "选择状态...",
                selectedText: "已选#个状态",
                checkAllText: "全选",
                uncheckAllText: "取消全选",
                selectedList: 3,
                click: function (event, ui) {
                    $('#MultiStatus').attr("value", getMultiRegions());
                },
                checkAll: function () {
                    $('#MultiStatus').attr("value", getMultiRegions());
                },
                uncheckAll: function () {
                    $('#MultiStatus').attr("value", getMultiRegions());
                }
            });
        });



        function getMultiRegions() {
            var m = "";
            var array_of_checked_values = $("#MultiSelectStatus").multiselect("getChecked").map(function () {
                return this.value;
            }).get();
            if (array_of_checked_values != null) {
                if (array_of_checked_values.length > 0) {
                    m = array_of_checked_values[0];
                    for (var i = 1; i < array_of_checked_values.length; i++) {
                        m = m + "," + array_of_checked_values[i];
                    };
                }
            }
            return m;
        }
    </script>
</fieldset>
