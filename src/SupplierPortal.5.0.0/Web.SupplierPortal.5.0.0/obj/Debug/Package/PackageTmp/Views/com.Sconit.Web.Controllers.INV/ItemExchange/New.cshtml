@using com.Sconit.Web.Models.SearchModels.INV
@model com.Sconit.Entity.INV.ItemExchange
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Inventory_ItemExchange" });
}
<script type="text/javascript">
    function PartyFrom_Change(e) {
        if (e.value != "") {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            } 
                $('#LocationFrom').data('tComboBox').value('');
                $('#LocationFrom').data('tComboBox').text('');
                $("#LocationFrom").data("tComboBox").reload();
            
        }
    }
    function LocationFrom_DataBinding(e) {
        e.data = {
            region: $('#PartyFrom').val()
        };
    }
    function PartyTo_Change(e) {
        if (e.value != "") {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
               
            } 
                $('#LocationTo').data('tComboBox').value('');
                $('#LocationTo').data('tComboBox').text('');
                $("#LocationTo").data("tComboBox").reload();
            
        }
    }

    function LocationTo_DataBinding(e) {
        e.data = {
            region: $('#PartyTo').val()
        };
    }

</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.INV.ItemExchange.ItemExchange_New_Title</legend>
        <div class="editor">
             <div class="editor-label-2">
             <label>
                    @Resources.INV.ItemExchange.ItemExchange_ItemFrom
                    </label>
            </div>
            <div class="search-field">
               @{
    Html.RenderAction("_ItemComboBox", "Common", new
                           {
                               controlName = "ItemFrom",
                               selectedValue = Model != null ? Model.ItemFrom : null
                           });
                }
                @Html.ValidationMessageFor(model => model.ItemFrom)
            </div>
            <div class="editor-label-2">
            <label>
                    @Resources.INV.ItemExchange.ItemExchange_ItemTo
                    </label>
            </div>
            <div class="search-field">

                  @{
    Html.RenderAction("_ItemComboBox", "Common", new
                           {
                               controlName = "ItemTo",
                               selectedValue = Model != null ? Model.ItemTo : null
                           });
                }
                @Html.ValidationMessageFor(model => model.ItemTo)
            </div>
             <div class="editor-label-2">
             <label>
                     @Resources.INV.ItemExchange.ItemExchange_RegionFrom
                     </label>
            </div>
            <div class="search-field">
 @{
    Html.RenderAction("_RegionComboBox", "Common", new
                           {
                               isChange = true,
                               ControlId = "PartyFrom",
                               controlName = "RegionFrom",
                               selectedValue = Model != null ? Model.RegionFrom : null
                           });
                }           
                @Html.ValidationMessageFor(model => model.RegionFrom)
                 </div>
              <div class="editor-label-2">
              <label>
                    @Resources.INV.ItemExchange.ItemExchange_RegionTo
                    </label>
            </div>
            <div class="search-field">
 @{
    Html.RenderAction("_RegionComboBox", "Common", new
                           {
                               isChange = true,
                               ControlId = "PartyTo",
                               controlName = "RegionTo",
                               selectedValue = Model != null ? Model.RegionTo : null
                           });
                }  
                @Html.ValidationMessageFor(model => model.RegionTo)          
                </div>
            <div class="editor-label-2">
            <label>
                   @Resources.INV.ItemExchange.ItemExchange_LocationFrom
                   </label>
            </div>
                 <div class="search-field">
 @{
    Html.RenderAction("_LocationComboBox", "Common", new
                           {
                               checkRegion = true,
                               controlName = "LocationFrom",
                               selectedValue = Model != null ? Model.LocationFrom : null
                           });
                }          
                @Html.ValidationMessageFor(model => model.LocationFrom)
                  </div>
              <div class="editor-label-2">
              <label>
                   @Resources.INV.ItemExchange.ItemExchange_LocationTo
                   </label>
            </div>
            <div class="search-field">
 @{
    Html.RenderAction("_LocationComboBox", "Common", new
                           {
                               checkRegion = true,
                               controlName = "LocationTo",
                               selectedValue = Model != null ? Model.LocationTo : null
                           });
                }    
                @Html.ValidationMessageFor(model => model.LocationTo)        
                </div>
                <div class="editor-label-2">
                @Html.LabelFor(model => model.Uom)
            </div>
            <div class="editor-field-2">
               @{
       Html.RenderAction("_UomDropDownList", "Common",
       new
       {
           controlName = "Uom",
           includeBlankOption = false,
           selectedValue = Model != null ? Model.Uom : string.Empty
       });
            }
            @Html.ValidationMessageFor(model => model.Uom)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.Qty)
            </div>
            <div class="editor-field-2">
               @Html.TextBox("Qty",Model!=null?Model.Qty.ToString():string.Empty)
               @Html.ValidationMessageFor(model => model.Qty)
            </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.QualityType)
                </div>
                <div class="editor-field-2">
                    @{
 
    Html.RenderAction("_CodeMasterDropDownList", "Common", new
    {
        code = com.Sconit.CodeMaster.CodeMaster.QualityType,
        controlName = "QualityType",
        selectedValue =  Model != null ? ((int)Model.QualityType).ToString() : null

    });    
}   
        </div>
         <div class="editor-label-2">
                @Html.LabelFor(model => model.EffectiveDate)
            </div>
            <div class="editor-field-2">         
            @(Html.Telerik().DatePicker().Format(com.Sconit.Entity.BusinessConstants.SHORT_DATE_FORMAT).Name("EffectiveDate").HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
               @Html.ValidationMessageFor(model => model.EffectiveDate)
            </div>
        </div>
        <div class="editor-footer">
            <button type="submit" id="btnNew">
                @Resources.Global.Button_New</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/ItemExchange/List")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
}