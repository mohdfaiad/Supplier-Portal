@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.INV.StockTakeMaster
@using (Html.BeginForm("btnComplete", "StockTake"))
{
    <fieldset id="edit">
        <legend>@Resources.INV.StockTake.StockTakeMaster_Edit_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.StNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.StNo)
                @Html.HiddenFor(model => model.StNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.TypeDescription)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.StockTakeStatusDescription)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Region)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Region)
                @Html.HiddenFor(model => model.Region)
            </div>
            @*<div class="editor-label-2">
                @Html.LabelFor(model => model.EffectiveDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.EffectiveDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.BaseInventoryDate)
            </div>
            <div class="editor-field-2">
                @if (Model.Status == com.Sconit.CodeMaster.StockTakeStatus.InProcess)
                {
                    @Html.Telerik().DateTimePickerFor(model => model.BaseInventoryDate)
                }
                else
                {
                    @Html.DisplayFor(model => model.BaseInventoryDate)
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsScanHu)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.IsScanHu)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CostCenter)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CostCenter)
            </div>*@
        </div>
        <div class="editor-footer">
            @{
                if (Model.Status == com.Sconit.CodeMaster.StockTakeStatus.Create)
                { 
                <button type="button" id="btnDelete" onclick="location.href='@Url.Content("~/StockTake/btnDelete/" + @Model.StNo)'">
                    @Resources.Global.Button_Delete</button>
                <button type="button" id="btnSubmit" onclick="location.href='@Url.Content("~/StockTake/btnSubmit/" + @Model.StNo)'">
                    @Resources.Global.Button_Submit</button>
    
                }
                else if (Model.Status == com.Sconit.CodeMaster.StockTakeStatus.Submit)
                {
                <button type="button" id="btnStart" onclick="location.href='@Url.Content("~/StockTake/btnStart/" + @Model.StNo)'">
                    @Resources.Global.Button_Start</button>
                <button type="button" id="btnCancel" onclick="location.href='@Url.Content("~/StockTake/btnCancel/" + @Model.StNo)'">
                    @Resources.Global.Button_Cancel</button>
            
                }
                else if (Model.Status == com.Sconit.CodeMaster.StockTakeStatus.InProcess)
                {
                <button type="submit" id="btnComplete" >
                    @Resources.Global.Button_Complete</button>
                }
                else if (Model.Status == com.Sconit.CodeMaster.StockTakeStatus.Complete)
                {
                <button type="button" id="btnClose" onclick="location.href='@Url.Content("~/StockTake/btnClose/" + @Model.StNo)'">
                    @Resources.Global.Button_Close</button>
                }
    
             
            }
            <button type="button" id="btnPrint" onclick="doPrint(false)">@Resources.Global.Button_Print</button>
            <button type="button" id="btnExport" onclick="doPrint(true)">@Resources.Global.Button_Export</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/StockTake/StockTakeMasterList")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
    <script type="text/javascript">
        function doPrint(isExport) {
            if (isExport) {
                location.href = "@Url.Content("~/StockTake/SaveToClient/?stNo=")" + $("#StNo").val();
            } else {
                var data = {
                    "stNo": $("#StNo").val()
                };
                $.ajax({
                    type: "post",
                    dataType: "text",
                    url: "@Url.Content("~/StockTake/Print/")",
                    data: data,
                    success: function (data, textStatus) {
                        if (data != "") {
                            PrintOrder(data);
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        DisplayTextMessages(XMLHttpRequest.responseText);
                    }
                });
            }
        }
    </script>
}
<div id="IsReadonly">
    @{ 
        Html.RenderAction("_StockTakeLocation", "StockTake", new { StNo = Model.StNo, Status = Model.Status });

        //if (Model.Type == com.Sconit.CodeMaster.StockTakeType.Part)
        //{
        //    Html.RenderAction("_StockTakeItem", "StockTake", new { StNo = Model.StNo, Status = Model.Status });
        //}
    }
</div>

