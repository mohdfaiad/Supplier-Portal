@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.SCM.FlowMaster
@{
    ViewBag.Title = Resources.SCM.FlowMaster.FlowMaster_ProductionLine;
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_AssemblyProductionFlow_View" });
}
<script type="text/javascript">
    function PartyFrom_Change(e) {
        if (e.value != "") {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            }
            $('#LocationFrom').data('tComboBox').value('');
            $('#LocationFrom').data('tComboBox').text('');
            $("#LocationFrom").data("tComboBox").reload();

            $('#LocationTo').data('tComboBox').value('');
            $('#LocationTo').data('tComboBox').text('');
            $("#LocationTo").data("tComboBox").reload();
        }
    }

    function LocationFrom_DataBinding(e) {
        e.data = {
            region: $("#PartyFrom").val()
        };
    }

    function LocationTo_DataBinding(e) {
        e.data = {
            region: $("#PartyFrom").val()
        };
    }
</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.SCM.FlowMaster.FlowMaster_LegendBaseInfo</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsActive", true)
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_ProductionDescription)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_ProductionPartyFrom)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_RegionComboBox", "Common",
    new
    {
        controlName = "PartyFrom",
        isChange = true,
        selectedValue = Model != null ? Model.PartyFrom : string.Empty
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_ProductionLocationFrom)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_LocationComboBox", "Common",
        new
        {
            controlName = "LocationFrom",
            checkRegion = true,
            selectedValue = Model != null ? Model.LocationFrom : string.Empty
        });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_ProductionLocationTo)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_LocationComboBox", "Common",
    new
    {
        controlName = "LocationTo",
        checkRegion = true,
        selectedValue = Model != null ? Model.LocationTo : string.Empty
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_ProdLineType)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ProdLineTypeDropDownList", "Common",
    new
    {
        controlName = "ProdLineType",
        code = com.Sconit.CodeMaster.CodeMaster.ProdLineType,
        isAssemblyFlow = true,
        selectedValue = Model != null ? ((int)Model.ProdLineType).ToString() : string.Empty
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_TaktTime)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.TaktTime).DecimalDigits(0).MinValue(0)秒
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_Routing)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_RoutingComboBox", "Common",
    new
    {
        controlName = "Routing",
        selectedValue = Model != null ? Model.Routing : string.Empty
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_VirtualOpReference)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.VirtualOpReference)
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.SCM.FlowMaster.FlowMaster_OrderTemplate)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common",
    new
    {
        code = com.Sconit.CodeMaster.CodeMaster.OrderTemplate,
        controlName = "OrderTemplate",
        includeBlankOption = true,
        blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
        blankOptionValue = "",
        selectedValue = Model != null ? Model.OrderTemplate : string.Empty
    });
                }
            </div>
        </div>
    </fieldset>

    <div class="editor-footer">
        @Html.Button(Resources.Global.Button_New, "Url_AssemblyProductionFlow_New", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnNew"},
        {"needconfirm","true"}
	})
        <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/AssemblyProductionFlow/List")'">
            @Resources.Global.Button_Back</button>
    </div>
}