@model IEnumerable<com.Sconit.Entity.INV.LocationDetailPref>
<fieldset>

    @(Html.Telerik().Grid(Model)
       .Name("LocationDetailPrefGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .ToolBar(commands =>
        {

            commands.Insert();

        })
        .DataBinding(dataBinding => dataBinding.Ajax()
        .Select("_AjaxList", "LocationDetailPref")
        .Insert("_Insert", "LocationDetailPref")
        .Update("_Update", "LocationDetailPref")
        .Delete("_Delete", "LocationDetailPref"))
        .Columns(columns =>
        {
            columns.Bound(o => o.Location).EditorTemplateName("LocationGridComboBox").Width(200);
            columns.Bound(o => o.Item).EditorTemplateName("ItemGridForeignKey").Width(200);
            columns.Bound(o => o.ReferenceItemCode).ReadOnly();
            columns.Bound(o => o.ItemDesc).ReadOnly();
            columns.Bound(o => o.SafeStock);
            columns.Bound(o => o.MaxStock);
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Delete();

            });
            

        }).ClientEvents(events =>
        {
            events.OnDataBinding("LocationDetailPref_OnDataBinding").OnComplete("TelerikGridView_OnComplete");
        })
        .EnableCustomBinding(true)
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(ViewBag.PageSize);
        })
        .Scrollable()
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
    <script type="text/javascript">
        function LocationDetailPref_OnDataBinding(e) {
            e.data = {
                ItemCode: $('#ItemCode').val(),
                LocationCode: $('#LocationCode').val()
            };
        }

        function onLocationDataBinding(e) {
            e.data = {
                "checkRegion": false
            };
        }

        function onItemComboBoxChange(e) {
            if (e.value != "" && e.value != undefined) {
                var combobox = $(this).data("tComboBox");
                if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                    combobox.value("");
                    combobox.reload();
                } else {
                    var data = {
                        "itemCode": e.value
                    };
                    $.ajax({
                        type: "post",
                        dataType: "json",
                        url: "@Url.Content("~/SequenceMaster/_WebOrderDetail/")",
                        data: data,
                        success: function (data, textStatus) {
                            var $tGrid = $("#LocationDetailPrefGrid").data("tGrid");
                            var $itemCell = $(e.target).parent().parent();
                            $itemCell.next().next().html(data.Description);
                            $itemCell.next().html(data.ReferenceCode);

                            var oldData = $tGrid.dataItem($itemCell.parent());
                            if (oldData != undefined) {
                                oldData.ReferenceItemCode = data.ReferenceCode;
                                oldData.ItemDesc = data.Description;
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }
            }
        }
    </script>
</fieldset>
