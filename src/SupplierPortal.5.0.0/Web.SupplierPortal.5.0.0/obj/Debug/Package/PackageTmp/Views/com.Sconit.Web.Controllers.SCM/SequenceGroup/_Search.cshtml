@using com.Sconit.Web.Models.SearchModels.SCM
<script type="text/javascript">
    function ExportClick() {
        location.href = "@Url.Content("~/SequenceGroup/Export/?ProdLine=")" + $('#ProdLine').val() + '&Code=' + $('#Code').val();
    }
</script>
<fieldset>
    @using (Html.BeginForm("List", "SequenceGroup"))
    {   
        <div class="search">
            <div class="search-label">
                <label>
                    @Resources.SCM.SequenceGroup.SequenceGroup_Code
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("Code", TempData["SequenceGroupSearchModel"] != null ? ((SequenceGroupSearchModel)TempData["SequenceGroupSearchModel"]).Code : string.Empty)
            </div>
            <div class="search-label">
                <label>
                    @Resources.SCM.SequenceGroup.SequenceGroup_ProdLine
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_FlowComboBox", "Common",
        new
        {
            controlName = "ProdLine",
            type = (int)com.Sconit.CodeMaster.OrderType.Production,
            isVanOrder = true,
            selectedValue = TempData["SequenceGroupSearchModel"] != null ? ((SequenceGroupSearchModel)TempData["SequenceGroupSearchModel"]).ProdLine : string.Empty
        });
                }
            </div>
            <div class="search-label">
                <label>
                    @Resources.SCM.SequenceGroup.SequenceGroup_IsActive
                </label>
            </div>
            <div class="search-field">
                @Html.CheckBox("IsActive", TempData["SequenceGroupSearchModel"] != null ? ((SequenceGroupSearchModel)TempData["SequenceGroupSearchModel"]).IsActive : true)
            </div>
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.Global.Button_Search</button>
            @Html.Button(Resources.Global.Button_New, "Url_SequenceGroup_View", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnNew"},
                    {"onclick","location.href='"+@Url.Content("~/SequenceGroup/New")+"'"}
                })
            <button type="button" id="btnExport" onclick="ExportClick()">
                @Resources.Global.Button_Export</button>
        </div>

    }
</fieldset>
