@model IEnumerable<com.Sconit.Entity.VIEW.VanOrderSeqView>
<script type="text/javascript">
    function OrderMasterGrid_OnDataBinding(e) {
        e.data = {
            Flow: $('#Flow').val()
        };
    }
    
    function OrderMasterGrid_OnRowDataBound(e) {
        if (e.dataItem.OrderNo != null) {
            $(e.row.cells).find('#Cancel').hide();
        }
    }

    function CancelClick(e) {
        $(e).attr('href', 'javascript:void(0);');
        if (confirm("确定要取消吗")) {
            var data = {
                "id": $(e).parent().parent().children().eq(0).text(),
                "flow": $("#Flow").val()
            };
            $.ajax({
                type: "post",
                dataType: "json",
                url: "@Url.Content("~/DeferredFeedCounter/CancelEmptyVanOrder/")",
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    DisplayJsonMessages(data);
                    $.ajax({
                        type: "get",
                        dataType: "html",
                        url: "@Url.Content("~/DeferredFeedCounter/CancelList/")",
                        data: { Flow: $("#Flow").val(), isFromList: true },
                        cache: false,
                        success: function (data, textStatus) {
                            $('#content').html(data);
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            DisplayTextMessages(XMLHttpRequest.responseText);
                        }
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    DisplayTextMessages(XMLHttpRequest.responseText);
                }
            });
        }

    }
</script>
<fieldset>
    @(Html.Telerik().Grid(Model)
        .Name("OrderMasterGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Hidden();
            columns.Bound(o => o.Flow);
            columns.Bound(o => o.OrderNo);
            columns.Bound(o => o.ExternalOrderNo);
            columns.Bound(o => o.TraceCode);
            columns.Bound(o => o.Sequence);
            columns.Bound(o => o.SubSequence);
            columns.Bound(o => o.OrderStatusDescription);
            columns.Bound(o => o.CurrentOperation);
            columns.Bound(o => o.PauseStatusDescription);
            columns.Command(commands =>
            {
                commands.Custom("Cancel").Text(Resources.Global.Button_Cancel)
                        .HtmlAttributes(new { onClick = "CancelClick(this)", id = "Cancel", href = "#" });
            });
        })
        .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("_CancelAjaxList", "DeferredFeedCounter"))
                .ClientEvents(events => events.OnDataBinding("OrderMasterGrid_OnDataBinding")
                                              .OnRowDataBound("OrderMasterGrid_OnRowDataBound"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable(c => c.Enabled(false))
        .Resizable(resizing => resizing.Columns(true))
    )
</fieldset>
