@{
    ViewBag.Title = Resources.ORD.OrderMaster.OrderMaster_OrderNo;
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Production_MaterialIn_ForceFeedOrderMaster" });
}
@model com.Sconit.Entity.ORD.OrderMaster
<script type="text/javascript">
    function onOrderChange(e) {
        var combobox = $(this).data("tComboBox");
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
            $("#divForceFeedQtyDeatil").hide();
        }
        else {
            var data = { "OrderNo": $("#OrderNo").val() };
            $.ajax({
                type: "get",
                dataType: "html",
                url: "@Url.Content("~/ProductionOrder/_ForceFeedQtyDetailList/")",
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    $("#errorsul").html('');
                    $("#divForceFeedQtyDeatil").html(data);
                    $("#divForceFeedQtyDeatil").show();

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var errorMessages = "<li>" + XMLHttpRequest.responseText + "</li>";
                    $("#successesul").html('');
                    $("#errorsul").html(errorMessages);
                }
            });
        }
    }

    function onSubmit(e) {
        var grid = $("#OrderBomDetail").data("tGrid");
        if (!grid) {
            $message.error('请选择订单号。');
            return;
        }
        var inserted = grid.changeLog.inserted;
        var updated = $.grep(grid.changeLog.updated, function (value) { return value != undefined });
        var deleted = $.grep(grid.changeLog.deleted, function (value) { return value != undefined });

        var orderBomDetails = grid.changeLog.serialize(inserted, updated, deleted);
        var orderMaster = {
            "OrderNo": $("#OrderNo").val()
        }
        grid._convert(orderBomDetails);
        $.ajax({
            type: "post",
            dataType: "Json",
            url: "@Url.Content("~/ProductionOrder/ForceFeedQty/")",
            data: $.extend(orderBomDetails, orderMaster),
            success: function (data) {
                $("#successesul").html('<li>' + data.SuccessMessage + '</li>');
                $("#errorsul").html('');
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/ProductionOrder/_ForceFeedQtyDetailList/")",
                    data: { orderNo: $("#OrderNo").val() },
                    cache: false,
                    success: function (data, textStatus) {
                        var $tGrid = $("#divForceFeedQtyDeatil");
                        $($tGrid).html(data);
                    }
                });

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                var errorMessages = "<li>" + XMLHttpRequest.responseText + "</li>";
                $("#successesul").html('');
                $("#errorsul").html(errorMessages);
            }
        });
    }


    function onUpload(e) {

        e.data = { OrderNo: $("#OrderNo").val()
        };

    }
</script>
@using (Html.BeginForm())
{
    <fieldset>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.OrderNo)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_OrderComboBox", "Common", new { controlName = "OrderNo", canFeed = true, orderType = (int)com.Sconit.CodeMaster.OrderType.Production, isChange = true });
                }
            </div>
            <div class="search-label">
                <label>
                    <a href="@Url.Content("~/Resource/Templates/UploadTemplate/ProductLine.xls")">模板下载</a>
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().Upload()
                            .Name("attachments")
                            .Multiple(false)
                            .Async(async => async
                .Save("ImportForceProductionOrderDetail", "ProductionOrder")
                                .AutoUpload(true))
                        .ClientEvents(e => e.OnSuccess("TelerikonUpload_OnSuccess").OnUpload("onUpload")))
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.Global.Button_MaterialIn, "Url_Production_MaterialIn_FeedOrderMaster", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnMaterialIn"},
        {"needconfirm","true"},
        {"onclick","onSubmit()"}
	})
        </div>
    </fieldset>
  
}
<div id="divForceFeedQtyDeatil">
</div>
