@model IEnumerable<com.Sconit.Entity.VIEW.AliquotStartTaskView>
<script type="text/javascript">
    function StartAliquotStartTaskGrid_OnDataBinding(e) {
        e.data = {
            SearchFlow: $('#SearchFlow').val(),
            SearchIsStart: "true"
        };
    }

    $(function () {
        $("#checkAllCancel").click(function () {
            var thisCheck = this.checked;
            var subCheckd = false;
            $('input[name="checkedRecordsCancel"]').each(function (index, domEle) {
                if ($(domEle).attr("disabled") == undefined) {
                    $(domEle).attr("checked", thisCheck);
                    subCheckd = thisCheck;
                }
            });
            if (thisCheck && subCheckd) {
                $("#btnCancel").removeAttr('disabled');
            }
            else {
                $("#btnCancel").attr("disabled", true);
            }
        });
    });

    function showCancelButton() {
        var $checkRecords = $("input[name='checkedRecordsCancel']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAllCancel").attr("checked", $checkRecords.length == $("input[name='checkedRecordsCancel']:checked").length ? true : false);
        if (showButton) {
            $("#btnCancel").removeAttr('disabled');
        }
        else {
            $("#btnCancel").attr("disabled", true);
        }
    }

    function btnCancel_Click() {
        var $checkRecords = $("input[name='checkedRecordsCancel']:checked");

        var checkedIds = "";
        for (var i = 0; i < $checkRecords.length; i++) {
            if (checkedIds == "") {
                checkedIds = $checkRecords[i].value;
            } else {
                checkedIds += "," + $checkRecords[i].value;
            }
        }

        location.href = "@Url.Content("~/AliquotStartTask/Cancel/?orderNos=")" + checkedIds + "&flow=" + $('#SearchFlow').val();
    }
</script>
<fieldset>
    <div class="search-footer">
        @Html.Button(Resources.Global.Button_Cancel, "Url_AliquotStartTask_View", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnCancel"},
        {"disabled","disabled"},
        {"onclick","btnCancel_Click()"}
	})
    </div>
</fieldset>
<fieldset>
    @(Html.Telerik().Grid(Model)
                .Name("StartAliquotStartTaskGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.RowId);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.RowId)
                       .ClientTemplate("<input type='checkbox' id='checkedRecordsCancel' name='checkedRecordsCancel' value='<#= OrderNo #>|<#= TraceCode #>' onClick='showCancelButton()' />")
                       .HeaderTemplate("<input type='checkbox' id='checkAllCancel' name='checkAllCancel' />")
                       .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.Flow);
            columns.Bound(o => o.TraceCode);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ItemDesc);
            columns.Bound(o => o.StartTime).Format("{0:yyyy-MM-dd HH:mm:ss}").Title(@Resources.ORD.AliquotStartTask.AliquotStartTask_ActualStartTime);
        })
                .Scrollable(c => c.Enabled(false))
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxList", "AliquotStartTask"))
                                        .ClientEvents(events => events.OnDataBinding("StartAliquotStartTaskGrid_OnDataBinding"))
                .Pageable(settings =>
                {
                    settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
                    settings.PageSize(ViewBag.PageSize);
                })
                .EnableCustomBinding(true)
                .Sortable()
                .Resizable(resizing => resizing.Columns(true))
            )
</fieldset>
