@model com.Sconit.Entity.SCM.FlowDetail
@using com.Sconit.Entity.SYS;
@Html.Partial("_AjaxMessage")
<script type="text/javascript">
    function Item_Change() {
        $("#ReferenceItemCode,#Uom,#UnitCount,#UnitCountDescription").val('');
        var combobox = $(this).data("tComboBox");
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
        } else {
            var data = {
                item: $("#Item").val()
            };
            $.ajax({
                type: "post",
                dataType: "json",
                url: "@Url.Content("~/KanbanFlow/GetRefItemCode/")",
                data: data,
                cache: false,
                success: function (data) {
                    $("#ReferenceItemCode").val(data.ReferenceCode);
                    $("#Uom").val(data.Uom);
                    $("#UnitCount").val(data.UnitCount);
                    $("#UnitCountDescription").val(data.UnitCountDescription);
                }
            });
        }
    }
</script>
@using (Html.BeginForm("_DetailNew", "KanbanFlow"))
{
    <fieldset>
        <legend>@Resources.SCM.FlowDetail.FlowDetail_LegendBaseInfo</legend>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Flow)
        </div>
        <div class="editor-field-2">
            @Html.DisplayTextFor(model => model.Flow)
            @Html.HiddenFor(model => model.Flow)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Sequence)
        </div>
        <div class="editor-field-2">
            @Html.Telerik().NumericTextBoxFor(model => model.Sequence).DecimalDigits(0).MinValue(0)
            @Html.ValidationMessageFor(model => model.Sequence)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Item)
        </div>
        <div class="editor-field-2">
            @{
    Html.RenderAction("_ItemComboBox", "Common", new
                                                     {
                                                         controlName = "Item",
                                                         coupled = true,
                                                         selectedValue = Model != null ? Model.Item : string.Empty
                                                     });
            }
            @Html.ValidationMessageFor(model => model.Item)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.ReferenceItemCode)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.ReferenceItemCode)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.UnitCount)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.UnitCount)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.UnitCountDescription)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.UnitCountDescription)
            @* @Html.ValidationMessageFor(model => model.ReferenceItemCode)*@
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Uom)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.Uom)
        </div>
    </fieldset>
    <fieldset>
        <legend>@Resources.SCM.FlowDetail.FlowDetail_LegendOtherInfo</legend>
        <div class="editor">
@*            <div class="editor-label-2">
                <label>@Resources.SCM.FlowDetail.FlowDetail__Procurement_SafeStock
                </label>
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.SafeStock).DecimalDigits(2).MinValue(0)
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_WinTimeIntervalWithHour</label>
                @Html.ValidationMessageFor(model => model.SafeStock)
            </div>*@
            <div class="editor-label-2">
                @Html.LabelFor(model => model.BinTo)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.BinTo)
            </div>
@*            <div class="editor-label-2">
                @Html.LabelFor(model => model.Shelf)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Shelf)
            </div>*@
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Dock)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Dock)
            </div>
        </div>
    </fieldset>
    <div class="editor-footer">
        @Html.Button(Resources.Global.Button_New, "Url_KanbanFlow_DetailEdit", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnNew"},
        {"needconfirm","true"}
	})
        <button type="button" id="btnBack" onclick="btnBackDetail_Click()">@Resources.Global.Button_Back</button>
    </div>
}
<script language="javascript" type="text/javascript">
    function btnBackDetail_Click() {
        var data = {
            "id": $("#Flow").val()
        };
        $.ajax({
            type: "get",
            dataType: "html",
            url: "@Url.Content("~/KanbanFlow/_Detail/")",
            data: data,
            cache: false,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                $(tabStripContent2).html(data);
            }
        });
    }

    $(document).ready(function () {
        $("#ReferenceItemCode,#Uom,#UnitCount,#UnitCountDescription").attr("disabled", true);
        $("form[action$='_DetailNew']").submit(function () {
            $.post($(this).attr("action"), $(this).serialize(), function (response) {
                var tabStrip = $("#TabStrip");
                var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                $(tabStripContent2).html(response);
            });
            return false;
        });
    });

</script>
