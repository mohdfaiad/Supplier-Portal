@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.INP.InspectMaster
<script type="text/javascript">
    function onJudge(e) {
        ClearMessage();
        var FailCodes = $("#InspectDetail .t-last");
        for (var i = 0; i < FailCodes.length; i++) {
            if (isNaN($(FailCodes[i]).prev().prev().prev().prev().text()) && $(FailCodes[i]).prev().prev().prev().prev().text()!="") {
                $message.error("第" + (i + 1) + "行本次不合格数必须为数字");
                return;
            }
            if (isNaN($(FailCodes[i]).prev().prev().prev().prev().prev().text()) && $(FailCodes[i]).prev().prev().prev().prev().prev().text() != "") {
                $message.error("第" + (i + 1) + "行本次合格数必须为数字");
                return;
            }
//            if ($(FailCodes[i]).prev().prev().prev().text() == "" && $(FailCodes[i]).prev().prev().prev().prev().text() > 0) {
//                $("#errorsul").html("第" + (i + 1) + "行失效模式为必填");
//                return;
//            }
        }
        var inspectOrder = {
            "InspectNo": $("#InspectNo").val(),
            "effectiveDate": $("#EffectiveDate").val()
        }
        var grid = $("#InspectDetail").data("tGrid");
        var inserted = grid.changeLog.inserted;
        var updated = $.grep(grid.changeLog.updated, function (value) { return value != undefined });
        var deleted = $.grep(grid.changeLog.deleted, function (value) { return value != undefined });

        var inspectDetails = grid.changeLog.serialize(inserted, updated, deleted);
        grid._convert(inspectDetails);
        $.ajax({
            type: "post",
            dataType: "json",
            url: "@Url.Content("~/InspectionOrder/Judge/")",
            data: $.extend(inspectDetails, inspectOrder),
            success: function (data) {
                DisplayJsonMessages(data);
                if (data != "") {
                    var orderData = {
                        "id": data.Data.InspectNo
                    };
                    $.ajax({
                        type: "post",
                        dataType: "html",
                        url: "@Url.Content("~/InspectionOrder/JudgeEdit/")",
                        data: orderData,
                        cache: false,
                        success: function (data, textStatus) {
                            var $tGrid = $("#content");
                            $($tGrid).html(data);
                        }
                    });
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

    function judgeQualify() {
        ClearMessage();
        batchJudge("@Url.Content("~/InspectionOrder/JudgeReject/")");
    }

    function judgeReject() {
        ClearMessage();
        var $grid = $("#InspectionOrderDetailGrid").data("tGrid");
        var rows = $grid.$tbody.children("tr");

//        for (var i = 0; i < rows.length; i++) {
//            var row = $(rows[i]);
//            if ($(row).children().eq(0).children().attr("checked") == "checked" && $(row).children("td:.t-last").prev().prev().prev().text() == "") {
//                $("#errorsul").html("第" + (i + 1) + "行失效模式为必填");
//                return;
//            }
//        }

        batchJudge("@Url.Content("~/InspectionOrder/JudgeReject/")");
    }

    function batchJudge(urlName) {
        var $grid = $("#InspectionOrderDetailGrid").data("tGrid");
        var rows = $grid.$tbody.children("tr");
        var idStr = "";
        var failCodeStr = "";
        var data = "";
        var notes = "";
        if (urlName == "@Url.Content("~/InspectionOrder/JudgeReject/")") {
            for (var i = 0; i < rows.length; i++) {
                var row = $(rows[i]);
                if ($(row).children().eq(0).children().attr("checked") == "checked") {
                    if (idStr == "") {
                        idStr = $(row).children().eq(0).children().val();
                        failCodeStr = $(row).children("td:.t-last").prev().prev().prev().text();
                        notes = $(row).children("td:.t-last").prev().prev().text();
                    } else {
                        idStr += "," + $(row).children().eq(0).children().val();
                        failCodeStr += "," + $(row).children("td:.t-last").prev().prev().prev().text();
                        notes += "," + $(row).children("td:.t-last").prev().prev().text();
                    }
                }
            }
            data = {
                "idStr": idStr,
                "failCodeStr": failCodeStr,
                "notes":notes,
                "inspectNo": $("#InspectNo").val()
            };
        }
        else {
            var $checkRecords = $("input[name='checkedRecords']");
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    var id = $checkRecords[i].value;
                    if (idStr == "") {
                        idStr = id;
                    } else {
                        idStr += "," + id;
                    }
                }
            }
            data = {
                "idStr": idStr,
                "inspectNo": $("#InspectNo").val()
            };
        }
        $.ajax({
            type: "post",
            dataType: "html",
            url: urlName,
            data: data,
            cache: false,
            success: function (data) {
                if (data != "") {
                    var orderData = {
                        "id": $("#InspectNo").val()
                    };
                    $.ajax({
                        type: "post",
                        dataType: "html",
                        url: "@Url.Content("~/InspectionOrder/JudgeEdit/")",
                        data: orderData,
                        cache: false,
                        success: function (data, textStatus) {
                            var $tGrid = $("#content");
                            $($tGrid).html(data);
                        }
                    });
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }
</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.INP.InspectMaster.InspectMaster_Title_View</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.InspectNo)
                @Html.Hidden("InspectNo",Model.InspectNo.ToString())
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.InspectNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.InspectStatusDescription)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateUserName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CreateUserName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CreateDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsPrint)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.IsPrint)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsATP)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.IsATP)
            </div>
                <div class="editor-label-2">
                @Html.LabelFor(model => model.IpNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.IpNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ReceiptNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ReceiptNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.WMSNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.WMSNo)
            </div>
           
             
            <div class="search-label">
                <label for="InspectMaster_effectiveDate">
                    过账日期
                 </label>
            </div>
            <div class="editor-field-2">
                 @(Html.Telerik().DateTimePicker()
                .Format(com.Sconit.Entity.BusinessConstants.LONG_DATE_FORMAT)
                .Name("EffectiveDate")
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
        </div>
        <div class="editor-footer">
            @{
    if (Model.Status != com.Sconit.CodeMaster.InspectStatus.Close)
    {
        if (Model.Type == com.Sconit.CodeMaster.InspectType.Quantity)
        {
             @Html.Button(Resources.Global.Button_Judge, "Url_InspectionOrder_Judge", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnJudge"},
                    {"needconfirm","true"},
                    {"onclick","onJudge()"}
	            })
        }
        else if (Model.Type == com.Sconit.CodeMaster.InspectType.Barcode)
        {
             @Html.Button(Resources.Global.Button_JudgeQualify, "Url_InspectionOrder_Judge", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnJudgeQualify"},
                    {"needconfirm","true"},
                    {"style","display: none"},
                    {"onclick","judgeQualify()"}
	            })

                
                 @Html.Button(Resources.Global.Button_JudgeReject, "Url_InspectionOrder_Judge", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnJudgeReject"},
                    {"needconfirm","true"},
                     {"style","display: none"},
                    {"onclick","judgeReject()"}
	            })
        }
    }
            }
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/InspectionOrder/JudgeList")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
}
@{
    if (Model.Type == com.Sconit.CodeMaster.InspectType.Quantity)
    {
        Html.RenderAction("InspectionOrderDetailJudge", "InspectionOrder", new { inspectNo = Model.InspectNo });
    }
    else if (Model.Type == com.Sconit.CodeMaster.InspectType.Barcode)
    {
        Html.RenderAction("InspectionOrderDetailJudgeWithHu", "InspectionOrder", new { inspectNo = Model.InspectNo });
    }
}
