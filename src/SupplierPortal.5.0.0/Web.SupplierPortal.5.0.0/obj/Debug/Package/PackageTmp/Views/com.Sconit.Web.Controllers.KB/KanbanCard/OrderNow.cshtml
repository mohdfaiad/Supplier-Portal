@{
    ViewBag.Title = "Index";
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_KanbanCard_Order" });
}
@using com.Sconit.Web.Models.SearchModels.KB
@model IEnumerable<com.Sconit.Entity.KB.KanbanScan>
<fieldset>
    @using (Html.BeginForm("Order", "KanbanCard"))
    {
        KanbanOrderSearchModel searchModel = ViewBag.SearchModel;
        @Html.Hidden("Region", searchModel.Region)
        @Html.Hidden("Supplier", searchModel.Supplier)
        @Html.Hidden("LcCode", searchModel.LcCode)
        <button type="submit" id="btnReturn" >
                @Resources.Global.Button_Back
        </button>
    }
    @(Html.Telerik().Grid(Model)
        .Name("KanbanScanGrid")
        .Columns(columns =>
        {
            columns.Bound(o => o.Msg);
            columns.Bound(o => o.Flow);
            columns.Bound(o => o.CardNo);
            columns.Bound(o => o.Supplier);
            columns.Bound(o => o.SupplierName);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.ScanQty);
            columns.Bound(o => o.ScanTime);
            columns.Bound(o => o.OrderQty);
            columns.Bound(o => o.OrderNo);
        })
        .Pageable()
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
</fieldset>
<script type="text/javascript">
    $(function () {
        var data = {
            orderNos: "@ViewBag.OrderNos"
        }
        $.ajax({
            type: "post",
            dataType: "text",
            data: data,
            async: false,
            url: "@Url.Content("~/ProcurementOrder/PrintOrders")",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                if (data != "") {
                    var printUrl = data.split('||');
                    for (var i = 0; i < printUrl.length; i++) {
                        if (printUrl[i] != "") {
                            PrintOrder(printUrl[i]);
                        }
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    });
</script>