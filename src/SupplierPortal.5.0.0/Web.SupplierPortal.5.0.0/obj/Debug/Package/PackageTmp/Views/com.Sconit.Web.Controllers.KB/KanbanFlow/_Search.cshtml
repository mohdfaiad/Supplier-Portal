@using com.Sconit.Web.Models.SearchModels.SCM
@{
    Layout = null;
}
<script type="text/javascript">
    function PartyTo_Change(e) {
        var combobox = $(this).data("tComboBox");
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
        }
        $('#LocationTo').data('tComboBox').value('');
        $('#LocationTo').data('tComboBox').text('');
        $("#LocationTo").data("tComboBox").reload();
    }

    function LocationTo_DataBinding(e) {
        e.data = {
            region: $("#PartyTo").val()
        };
    }
    function onSuccess(e) {
        $('.t-upload-files').remove();
        $("#errorsul").html('');
        $("#successesul").html("<li>" + e.response.status + "</li>");
    }
    function onUploadError(e) {
        $('.t-upload-files').remove();
        var errorMessages = "<li>" + e.XMLHttpRequest.responseText + "</li>";
        $("#errorsul").html(errorMessages);
        $("#successesul").html('');
        e.preventDefault();
    }
    function onUpload(e) {
        e.data = {
            flowCode: $("#FlowCode").val()
        };

    }
    function ExportClick() {
        location.href = "@Url.Content("~/KanbanFlow/Export/?Code=")" + $('#Code').val() + '&PartyFrom=' + $('#PartyFrom').val()
            + '&PartyTo=' + $('#PartyTo').val() + '&LocationTo=' + $('#LocationTo').val()
            + '&IsActive=' + $('#IsActive').is(':checked') + '&Region=' + $('#Region').val()
             + '&Supplier=' + $('#Supplier').val();
    }
</script>
<fieldset>
    @using (Html.BeginForm("List", "KanbanFlow", new { isFromList = false }))
    {   
        <div class="search">
            <div class="search-label">
                <label for="FlowMaster_Code">
                    @Resources.SCM.FlowMaster.FlowMaster_Code
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("Code", TempData["FlowSearchModel"] != null ? ((FlowSearchModel)TempData["FlowSearchModel"]).Code : string.Empty)
            </div>
            <div class="search-label">
                <label for="FlowMaster_IsActive">
                    @Resources.SCM.FlowMaster.FlowMaster_IsActive
                </label>
            </div>
            <div class="search-field">
                @Html.CheckBox("IsActive", TempData["FlowMaster"] != null ? ((FlowSearchModel)TempData["FlowMaster"]).IsActive : true)
            </div>
            <div class="search-label">
                <label for="FlowMaster_FirstName">
                    @Resources.SCM.FlowMaster.FlowMaster_TransferPartyFrom
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_OrderMasterPartyFromComboBox", "Common",
                    new
                    {
                        controlName = "PartyFrom",
                        selectedValue = TempData["FlowSearchModel"] != null ? ((FlowSearchModel)TempData["FlowSearchModel"]).PartyFrom : string.Empty
                    });
                }
            </div>
            <div class="search-label">
                <label for="FlowMaster_LastName">
                    @Resources.SCM.FlowMaster.FlowMaster_TransferPartyTo
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_OrderMasterPartyToComboBox", "Common", new
                    {
                        controlName = "PartyTo",
                        selectedValue = TempData["FlowSearchModel"] != null ? ((FlowSearchModel)TempData["FlowSearchModel"]).PartyTo : string.Empty
                    });
                }
            </div>
            <div class="search-label">
                <label for="FlowMaster_LastName">
                    @Resources.SCM.FlowMaster.FlowMaster_LocationTo
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_LocationComboBox", "Common",
                    new
                    {
                        controlName = "LocationTo",
                        checkRegion = true,
                        selectedValue = TempData["FlowSearchModel"] != null ? ((FlowSearchModel)TempData["FlowSearchModel"]).LocationTo : string.Empty
                    });
                }
            </div>

            <div class="search-label">
                <label>
                    <a href="@Url.Content("~/Resource/Templates/UploadTemplate/KanBanFlow.xls")">模板下载</a>
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().Upload()
                .Name("flowattachments")
                    .Multiple(false)
                    .Async(async => async
            .Save("Import", "KanbanFlow")
                    .AutoUpload(true))
                    .ClientEvents(e => e.OnSuccess("TelerikonUpload_OnSuccess")))
            </div>
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.Global.Button_Search</button>
            <button type="button" id="btnNew" onclick="location.href='@Url.Content("~/KanbanFlow/New")'">
                @Resources.Global.Button_New</button>
            <button type="button" id="btnExport" onclick="ExportClick()">
                @Resources.Global.Button_Export</button>
        </div>

    }
</fieldset>
