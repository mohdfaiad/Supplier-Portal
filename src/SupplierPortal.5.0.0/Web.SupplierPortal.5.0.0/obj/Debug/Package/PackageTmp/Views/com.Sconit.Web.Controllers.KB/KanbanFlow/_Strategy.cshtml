@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.SCM.FlowStrategy
@Html.Partial("_AjaxMessage")
@{
    Layout = null;
}
<form action="@Url.Content("~/KanbanFlow/_Strategy")" method="post">
<fieldset>
    <legend>@Resources.SCM.FlowStrategy.FlowStrategy_Strategy</legend>
    <div class="editor">
        <div class="editor-label-2">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_Strategy</label>
        </div>
        <div class="editor-field-2">
            @{
                Html.RenderAction("_CodeMasterDropDownList", "Common", new
                                                                           {
                                                                               code = com.Sconit.CodeMaster.CodeMaster.FlowStrategy,
                                                                               controlName = "StrategyTo",
                                                                               enable = false,
                                                                               selectedValue = (int)com.Sconit.CodeMaster.FlowStrategy.ANDON
                                                                           });
            }
            <input type="hidden" name="Strategy" id="Strategy" value="@ViewBag.Strategy" />
            @Html.HiddenFor(model => model.Flow)
        </div>
        @*<div class="editor-label-2">
        </div>
        <div class="editor-field-2">
        </div>*@
        <div class="editor-label-2">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_Desc1</label>
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
@*        <div class="editor-label-2" id="KBCalclabel">
            @Html.LabelFor(model => model.KBCalc)
        </div>
        <div class="editor-field-2" id="KBCalcfield">
            @{
                Html.RenderAction("_CodeMasterDropDownList", "Common", new
                {
                    code = com.Sconit.CodeMaster.CodeMaster.KBCalc,
                    controlName = "KBCalc",
                    controlId = "KBCalc",
                    selectedValue = com.Sconit.CodeMaster.KBCalculation.Normal,
                    enable = false
                });
            }
            @Html.HiddenFor(model => model.KBCalc)
        </div>*@
        <div class="editor-label-2">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_LeadTime</label>
        </div>
        <div class="editor-field-2">
            @Html.Telerik().NumericTextBoxFor(model => model.LeadTime).MinValue(0).DecimalDigits(2)
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_WaitTimeWithHour</label>
            @Html.ValidationMessageFor(model => model.LeadTime)
        </div>
        <div class="editor-label-2" id="label-WinTimeDiff">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_WinTimeDiff</label>
        </div>
        <div class="editor-field-2" id="field-WinTimeDiff">
            @Html.Telerik().NumericTextBoxFor(model => model.WinTimeDiff).MinValue(0).DecimalDigits(2)
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_WaitTimeWithHour</label>
            @Html.ValidationMessageFor(model => model.WinTimeDiff)
        </div>
        <div class="editor-label-2" id="label-IsOrderNow">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_IsOrderNow</label>
        </div>
        <div class="editor-field-2" id="field-IsOrderNow">
            @Html.CheckBoxFor(model => model.IsOrderNow)
        </div>
        <div style="display: none">
            <div class="editor-label-2">
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_EmLeadTime</label>
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.EmergencyLeadTime).MinValue(0).DecimalDigits(2)
                @Html.ValidationMessageFor(model => model.EmergencyLeadTime)
            </div>
            <div class="editor-label-2">
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_WeekInterval</label>
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.WeekInterval).MinValue(0).DecimalDigits(0)
                @Html.ValidationMessageFor(model => model.WeekInterval)
            </div>
            <div class="editor-label-2">
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_WinTimeDiff</label>
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.WinTimeDiff).MinValue(0).DecimalDigits(0)
                @Html.ValidationMessageFor(model => model.WinTimeDiff)
            </div>
@*            <div class="editor-label-2">
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_WinTimeInterval</label>
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.WinTimeInterval).MinValue(0).DecimalDigits(2)
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_WinTimeIntervalWithHour</label>
                @Html.ValidationMessageFor(model => model.WinTimeInterval)
            </div>*@
        </div>
@*        @{
            if (ViewBag.qiTiaoBian)
            {
            <div class="editor-label-2">
                <label>@Resources.SCM.FlowStrategy.FlowStrategy_QiTiaoBian</label>
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.QiTiaoBian)
            </div>
           
            }
            else
            {
            @Html.HiddenFor(model => model.QiTiaoBian)
            }
        }*@
        @*  <div class="editor-label-2">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_NextOderTime</label>
        </div>
        <div class="editor-field-2">
            @{
                if (ViewBag.NextOrderTime != null)
                {
                @Html.EditorFor(model => model.NextOrderTime);
                }
                else
                {
                @Html.Telerik().DateTimePicker().Format("yyyy-MM-dd HH:mm").Name("NextOrderTime");
                }
            }
        </div>
        <div class="editor-label-2">
            <label>@Resources.SCM.FlowStrategy.FlowStrategy_NextWindowTime</label>
        </div>
        <div class="editor-field-2">
            @{
                if (ViewBag.NextWindowTime != null)
                {
                @Html.EditorFor(model => model.NextWindowTime);
                }
                else
                {
                @Html.Telerik().DateTimePicker().Format("yyyy-MM-dd HH:mm").Name("NextWindowTime");
                }
             
            }
        </div>*@
    </div>
</fieldset>
<div class="editor-footer">
    @Html.Button(Resources.Global.Button_Save, "Url_KanbanFlow_View", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnEdit"},
        {"needconfirm","true"}
	})
    <button type="button" id="btnBackStrategy" onclick="location.href='@Url.Content("~/KanbanFlow/List")'">
        @Resources.Global.Button_Back</button>
</div>
</form>
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        $("form[action$='_Strategy']").submit(function () {
            $.post($(this).attr("action"), $(this).serialize(), function (response) {
                var tabStrip = $("#TabStrip");
                var tabStripContent1 = tabStrip.data("tTabStrip").getContentElement(1);
                $(tabStripContent1).html(response);
            });
            return false;
        });
    });

    $(function () {
        if ($("#IsReturn").val() == "False") {
            $("#btnBackStrategy").show();
            $("#btnIsReturn").hide();
        }
        else {
            $("#btnBackStrategy").hide();
            $("#btnIsReturn").show();
        }
    });
</script>
