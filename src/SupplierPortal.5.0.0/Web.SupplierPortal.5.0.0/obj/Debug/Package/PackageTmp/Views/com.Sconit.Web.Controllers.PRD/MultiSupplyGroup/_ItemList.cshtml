@model IEnumerable<com.Sconit.Entity.PRD.MultiSupplyItem>
<script type="text/javascript">
    function onSupplierComboBoxChange() { }

    function onItemComboBoxChange(e) {
        if (e.value != null) {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            } else {
                var data = {
                    "itemCode": e.value
                };
                $.ajax({
                    type: "post",
                    dataType: "json",
                    url: "@Url.Content("~/MultiSupplyGroup/_WebItem/")",
                    data: data,
                    success: function (data, textStatus) {

                        var $tGrid = $("#MultiSupplyItem").data("tGrid");
                        var $itemCell = $(e.target).parent().parent();
                        $itemCell.next().html(data.Description);

                        var oldData = $tGrid.dataItem($itemCell.parent());
                        if (oldData != undefined) {
                            oldData.ItemDescription = data.Description;
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        DisplayTextMessages(XMLHttpRequest.responseText);
                    }
                });
            }
        }
    }
</script>
<fieldset>
    <legend>@Resources.PRD.MultiSupplyGroup.MultiSupplyGroup_Item</legend>
    @(Html.Telerik().Grid(Model)
          .Name("MultiSupplyItem")
          .DataKeys(keys =>
                        {
                            keys.Add(p => p.Id);
                        })
          .ToolBar(command =>
                       {
                           command.Insert();
                       })
          .DataBinding(dataBinding =>
                       dataBinding.Ajax()
                           .Select("_SelectItemList", "MultiSupplyGroup")
                           .Insert("_ItemInsert", "MultiSupplyGroup", new RouteValueDictionary() { { "GroupNo", ViewBag.GroupNo }, })
                           .Update("_ItemUpdate", "MultiSupplyGroup", new RouteValueDictionary() { { "GroupNo", ViewBag.GroupNo }, })
                           .Delete("_ItemDelete", "MultiSupplyGroup", new RouteValueDictionary() { { "GroupNo", ViewBag.GroupNo }, })
          )
          .Columns(columns =>
                       {
                           columns.Bound(o => o.Id).Hidden();
                           columns.Bound(o => o.Supplier).EditorTemplateName("MultiSupplySupplierGridForeignKey").Width(200);
                           //columns.Bound(o => o.Supplier).EditorTemplateName("SupplierGridForeignKey").Width(200);
                           columns.Bound(o => o.SubstituteGroup).Width(200);
                           columns.Bound(o => o.Item).EditorTemplateName("ItemGridForeignKey").Width(200);
                           columns.Bound(o => o.ItemDescription).ReadOnly().Width(120);
                           columns.Command(commands =>
                                               {
                                                   commands.Edit();
                                                   commands.Delete();
                                               }).Width(180);
                       })
                  .Scrollable(c => c.Enabled(false))
                  .Pageable(settings =>
                  {
                      settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
                      settings.PageSize(ViewBag.PageSize);
                  })
          .Resizable(resizing => resizing.Columns(true))
         )
</fieldset>
