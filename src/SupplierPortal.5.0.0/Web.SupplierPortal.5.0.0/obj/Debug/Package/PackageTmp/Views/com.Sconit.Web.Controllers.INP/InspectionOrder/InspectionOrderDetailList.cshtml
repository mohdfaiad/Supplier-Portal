   @model IEnumerable<com.Sconit.Entity.INP.InspectResult>

        @(Html.Telerik().Grid(Model)
        .Name("InspectResult")
       @*  .ToolBar(toolBar => toolBar.Template(
            @<text>
        <label class="customer-label" for="Customers-input">
            处理方式:
        </label>
        @(Html.Telerik().DropDownList()
                    .Name("HandleResult")
                    .DataBinding(binding => binding.Ajax().Select("_GetHandleRsults", "RejectOrder"))
                   )
        </text>))*@
        .DataKeys(keys => { keys.Add(p => p.InspectNo); })
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Hidden();
            //.Visible(ViewBag.InspectType == (int)com.Sconit.CodeMaster.InspectType.Barcode)
            //   .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= Id #>'  />")
            //   .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
            //   .Width(36).HtmlAttributes(new { style = "text-align:center" });
          //  columns.Bound(o => o.Id).HtmlAttributes(new { id = "Id" }).Hidden().Visible(ViewBag.InspectType == (int)com.Sconit.CodeMaster.InspectType.Quantity);
            columns.Bound(o => o.InspectNo);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UnitCount);
            columns.Bound(o => o.HuId).Hidden(ViewBag.InspectType == (int)com.Sconit.CodeMaster.InspectType.Quantity);
            columns.Bound(o => o.LotNo).Hidden(ViewBag.InspectType == (int)com.Sconit.CodeMaster.InspectType.Quantity);
            columns.Bound(o => o.ManufactureParty);
            columns.Bound(o => o.IpNo);
            columns.Bound(o => o.ReceiptNo);
            columns.Bound(o => o.WMSNo);
            columns.Bound(o => o.CurrentLocation);
            columns.Bound(o => o.CreateUserName);
            columns.Bound(o => o.CreateDate);
            columns.Bound(o => o.FailCode);
            columns.Bound(o => o.JudgeQty);
            columns.Bound(o => o.HandleQty);
            columns.Bound(o => o.CurrentHandleQty).ClientTemplate("<input type='text' id='CurrentHandleQty' onblur='OnQtyBlur(this)' name='CurrentHandleQty' style='width:70px' value='<#= CurrentHandleQty #>'/>").Hidden(ViewBag.InspectType == (int)com.Sconit.CodeMaster.InspectType.Barcode);
           // columns.Bound(o => o.CurrentHandleQty).Hidden(ViewBag.InspectType == (int)com.Sconit.CodeMaster.InspectType.Quantity);

            //columns.ForeignKey(o => o.CurrentFailCode, (IEnumerable<FailCode>)ViewData["failCodes"], "Code", "CHNDescription");
        })
       // .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
        .DataBinding(dataBinding => dataBinding.Ajax()
        .Select("_AjaxInspectResultNewList", "InspectionOrder"))
        .ClientEvents(events => events.OnDataBinding("InspectResultGrid_OnDataBinding"))
        // .Editable(editing=> editing.Mode(GridEditMode.InCell))
        .Sortable()
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(200);
        })
            .Resizable(resizing => resizing.Columns(true)))
        <script type="text/javascript">
            function OnQtyBlur(e) {
                if (e.value != "") {
                    if (parseInt(e.value) < 0 || isNaN(e.value)) {

                        $(e).val('');
                        $message.error("本次处理数只能为大于0的数字。");
                    }
//                    else {
//                        if (parseFloat($(e).parent().prev().prev().val()) < parseFloat(e.value)) {
//                            $(e).val('');
//                            $("#successesul").html('');
//                            $("#errorsul").html("本次收货数不能大于本次发货数。");
//                        }

//                    }
                }
            }

            function onHuCreate() {

                var $checkRecords = $("input[name='checkedRecords']");
                var idStr = "";
                for (var i = 0; i < $checkRecords.length; i++) {
                    if ($checkRecords[i].checked) {
                        var id = $checkRecords[i].value;
                        if (idStr == "") {
                            idStr = id;
                        } else {
                            idStr += "," + id;
                        }
                    }
                }
                var data = {
                    "handleResult": $("#HandleResult").val(),
                    "idStr": idStr
                };
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/RejectOrder/CreateByHu/")",
                    data: data,
                    cache: false,
                    success: function (data) {
                        DisplayJsonMessages(data);
                        if (data != "") {
                            var rejectData = {
                                "id": data
                            };
                            $.ajax({
                                type: "get",
                                dataType: "html",
                                url: "@Url.Content("~/RejectOrder/Edit/")",
                                data: rejectData,
                                cache: false,
                                success: function (data, textStatus) {
                                    var $tGrid = $("#content");
                                    $($tGrid).html(data);
                                }
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        DisplayTextMessages(XMLHttpRequest.responseText);
                    }
                });
            }


            function InspectResultGrid_OnDataBinding(e) {
                e.data = {
                    InspectNo: $('#InspectNo').val(),
                    Item: $('#Item').val(),
                    IpNo: $('#IpNo').val(),
                    ReceiptNo: $("#ReceiptNo").val(),
                    WMSNo: $("#WMSNo").val(),
                    CreateUserName: $("#CreateUserName").val(),
                    CurrentLocation: $("#CurrentLocation").val(),
                    StartDate: $("#StartDate").val(),
                    EndDate: $("#EndDate").val(),
                    InspectType: $("input[type=radio][checked]").val()
                };
            }
        </script>
  