@model IEnumerable<com.Sconit.Entity.ORD.OrderDetail>
<script type="text/javascript">
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            showButtons();
        });
    });
    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
        $("#btnReceive").attr("style", showButton ? "display:inline" : "display:none");
    }

    function ReceiveOrderGrid_OnDataBinding(e) {
        e.data = {
            OrderNo: $('#OrderNo').val(),
            Flow: $('#Flow').val(),
            PartyFrom: $('#PartyFrom').val(),
            PartyTo: $('#PartyTo').val()
        };
    }
</script>
<fieldset>
    <legend>@Resources.ORD.OrderDetail.OrderDetail_Title</legend>
    @using (Html.BeginForm())
    { 
        @(Html.Telerik().Grid(Model)
            .Name("ReceiveOrderGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            //columns.Bound(o => o.Id).Hidden();
            columns.Bound(o => o.Id)
             .ClientTemplate("<input type='checkbox' id='Id' name='checkedRecords' value='<#= Id #>' onClick='showButtons()'  />")
             .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
             .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.OrderNo);
            columns.Bound(o => o.Sequence);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UnitCount).Format("{0:N}");

            columns.Bound(o => o.OrderedQty).Format("{0:N}");
            columns.Bound(o => o.ShippedQty).Format("{0:N}");
            columns.Bound(o => o.ReceivedQty).Format("{0:N}");
            columns.Bound(o => o.CurrentReceiveQty).ClientTemplate("<input type='text' id='CurrentReceiveQty' name='CurrentReceiveQty' style='width:70px' value='<#=CurrentReceiveQty #>'/>").Format("{0:N}");
            columns.Bound(o => o.Container);
            columns.Bound(o => o.ContainerDescription);
            columns.Bound(o => o.LocationToName);
        })
                 //.CellAction(cell =>
                 //{
                 //    if (cell.Column.Member == "Id")
                 //    {
                 //        cell.Text = string.Format("<input type='text' id='Id' name='Id' style='display:none' value='" + cell.DataItem.Id + "'/>");
                 //    }
                 //    if (cell.Column.Member == "CurrentReceiveQty")
                 //    {
                 //        cell.Text = string.Format("<input type='text' id='CurrentReceiveQty' name='CurrentReceiveQty' style='width:70px' value='" + cell.DataItem.CurrentReceiveQty.ToString("F2") + "'/>");
                 //    }
                 //})
             .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxReceiveDetailList", "ProcurementOrder", new { wmsNo = (string)ViewBag.WmsNo }))
                 .ClientEvents(events => events.OnComplete("TelerikGridView_OnComplete").OnDataBinding("ReceiveOrderGrid_OnDataBinding"))
             .Pageable(settings =>
             {
                 settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
                 settings.PageSize(50);
             })
        .Scrollable(c => c.Enabled(false))
                .Resizable(resizing => resizing.Columns(true))
        .Footer(true)
    )
      
    }
</fieldset>

