@model com.Sconit.Entity.ORD.OrderMaster
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_OrderMstr_Production_Import" });

}
@using (Html.BeginForm("ImportSapOrder", "ProductionOrder"))
{
    <fieldset>
        <div class="editor">
            <div class="editor-label-2">
                <label>
                    @Resources.ORD.OrderMaster.OrderMaster_ExternalOrderNo_Sap
                </label>
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.ExternalOrderNo)
            </div>

            <div class="editor-label-2">
                <label>
                    开始时间
                </label>
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.EffectiveDate)
            </div>
            <div class="search-label">
                <label>
                    <a href="@Url.Content("~/Resource/Templates/UploadTemplate/SapOrderImport.xls")">模板下载</a>
                </label>
            </div>
            <div class="search-field">
                     @(Html.Telerik().Upload()
                    .Name("attachments")
                    .Multiple(false)
                    .Async(async => async
            .Save("ImportSapOrderByExcel", "ProductionOrder")
                    .AutoUpload(true))
                            .ClientEvents(e => e.OnSuccess("TelerikonUpload_OnSuccess")))
            </div>
             @*<div class="search-label">
                <label for="OrderMaster_Flow">
                    @Resources.ORD.OrderMaster.OrderMaster_Flow_Production
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_FlowComboBox", "Common",
            new
            {
                controlName = "Flow",
                type = (int)com.Sconit.CodeMaster.OrderType.Production,
                selectedValue =string.Empty
            });
                }
            </div>*@
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.Global.Button_Import, "Url_OrderMstr_Production_Import", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnImport"},
        {"needconfirm","true"}
	})
    @* @Html.Button("批量导入", "Url_OrderMstr_Production_Import", new Dictionary<string, string>()
            {
	            {"type", "button"},
	            {"id", "btnBatch"},
                {"needconfirm","true"},
                {"onclick","onBatchImport()"}
            })*@
        </div>

        <script type="text/javascript">
            function onBatchImport() {
                ClearMessage();
                if($("#EffectiveDate").val()=="")
                {
                    $("#errorsul").html('开始时间不能为空。');
                    return;
                }
                
                var data = {
                    "EffectiveDate": $("#EffectiveDate").val(),
                    "Flow": ""
                }
                $.ajax({
                    type: "Post",
                    dataType: "html",
                    data: data,
                    url: "@Url.Content("~/ProductionOrder/ImportSapOrders/")",
                    cache: false,
                    success: function (data, textStatus) {
                        // $("#successesul").html('导入成功。');
                        var $tGrid = $("#content");
                        $($tGrid).html(data);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        DisplayTextMessages(XMLHttpRequest.responseText);
                    }
                });
            }
        </script>
    </fieldset>
   
}
