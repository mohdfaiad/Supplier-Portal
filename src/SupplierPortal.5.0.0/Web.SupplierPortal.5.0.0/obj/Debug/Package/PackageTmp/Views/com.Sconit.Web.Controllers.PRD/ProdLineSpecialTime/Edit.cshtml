@model com.Sconit.Entity.PRD.SpecialTime
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_ProdLineSpecialTime_RestView" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.PRD.SpecialTime.SpecialTime_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Type)
            @Html.HiddenFor(model => model.ProdLine, new { id = "SpecialTimeProdLine" })
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.LastModifyUserName)
            @Html.HiddenFor(model => model.LastModifyDate)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ProdLine)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ProdLine)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                @Html.Label(Resources.CodeDetail.CodeDetail_WorkingCalendar_Rest)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.StartTime)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().DateTimePickerFor(model => model.StartTime)
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.EndTime)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().DateTimePickerFor(model => model.EndTime)
                @Html.ValidationMessageFor(model => model.EndTime)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.Global.Button_Save, "Url_ProdLineSpecialTime_RestEdit", new Dictionary<string, string>()
                                                                                   {
                                                                                       {"type", "submit"},
                                                                                       {"id", "btnSave"},
                                                                                       {"needconfirm","true"}
                                                                                   })
            @Html.Button(Resources.Global.Button_Delete, "Url_ProdLineSpecialTime_RestDelete", new Dictionary<string, string>()
                                                                                       {
                                                                                           {"type", "button"},
                                                                                           {"id", "btnDelete"},
                                                                                           {"needconfirm","true"},
                                                                                            //{"onclick","btnDelete_Click()"}
                                                                                           {"onclick","location.href='"+@Url.Content("~/ProdLineSpecialTime/Delete/" + @Model.Id)+"'"}
                                                                                       })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/ProdLineSpecialTime/List")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
}