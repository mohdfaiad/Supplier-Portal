@model com.Sconit.Entity.INP.RejectMaster
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_RejectOrder_Return" });
}
<script type="text/javascript">
    function Reject_Change(e) {
        var combobox = $(this).data("tComboBox");
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
            $("#fdReturnDetail").hide();
        } else {
            var data = { "rejectNo": e.value };
            $.ajax({
                type: "get",
                dataType: "html",
                url: "@Url.Content("~/RejectOrder/_ReturnDetailList/")",
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    $("#fdReturnDetail").html(data);
                    $("#fdReturnDetail").show();
                    $("#btnNew").attr("style", "display:inline");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        }
    }

    function onSubmit(e) {
        $("#successesul").html('');
        $("#errorsul").html('');
        var flowCombobox = $("#Flow").data("tComboBox");
        var rejCombobox = $("#RejectNo").data("tComboBox");
        if (rejCombobox.selectedIndex == undefined || rejCombobox.selectedIndex == -1) {
            rejCombobox.value("");
            $("#errorsul").html("@Resources.INP.RejectMaster.Errors_RejectNoIsNotCorrect");
            return;
        }
        if (flowCombobox.selectedIndex == undefined || flowCombobox.selectedIndex == -1) {
            flowCombobox.value("");
            $("#errorsul").html("@Resources.ORD.OrderMaster.Errors_FlowIsNotCorrect");
            return;
        }

        var inspectType = $("#InspectType").val();
        var data = "";
        var url = "";
        if (inspectType == 1) {
            var grid = $("#ReturnDetail").data("tGrid");
            var rows = grid.$tbody.children("tr:not(.t-no-data)");
            var idStr = "";
            var qtyStr = "";

            for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
                var row = $(rows[rowIndex]);
                var id = row.find("#Id").val();
                var qty = row.find("#CurrentHandleQty").val();
                if (qty != "" && !isNaN(qty) && parseFloat(qty) > 0) {
                    if (idStr == "") {
                        idStr = id;
                        qtyStr = qty;
                    } else {
                        idStr += "," + id;
                        qtyStr += "," + qty;
                    }
                }
            }
            data = {
                "idStr": idStr,
                "qtyStr": qtyStr,
                "flow": $("#Flow").val()
            };
            url = "@Url.Content("~/RejectOrder/CreateReturnOrder/")";
        } else {
            var $checkRecords = $("input[name='checkedRecords']");
            var idStr = "";
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    var id = $checkRecords[i].value;
                    if (idStr == "") {
                        idStr = id;
                    } else {
                        idStr += "," + id;
                    }
                }
            }

            data = {
                "flow": $("#Flow").val(),
                "idStr": idStr
            }
            url = "@Url.Content("~/RejectOrder/CreateHuReturnOrder/")";
        }
        $.ajax({
            type: "post",
            dataType: "Json",
            url: url,
            data: data,
            success: function (data) {
                var rejectNo = { "rejectNo": $("#RejectNo").val() };
                $("#successesul").html('<li>' + data.SuccessMessage + '</li>');
                $("#errorsul").html('');
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/RejectOrder/_ReturnDetailList/")",
                    data: rejectNo,
                    cache: false,
                    success: function (data, textStatus) {
                        var $tGrid = $("#fdReturnDetail");
                        $($tGrid).html(data);
                    }
                });

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                var errorMessages = "<li>" + XMLHttpRequest.responseText + "</li>";
                $("#successesul").html('');
                $("#errorsul").html(errorMessages);
            }
        });

    }
</script>
@using (Html.BeginForm())
{
    <fieldset>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.RejectNo)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_RejectComboBox", "Common", new { controlName = "RejectNo", status = (int)com.Sconit.CodeMaster.RejectStatus.Submit, handleResult = (int)com.Sconit.CodeMaster.HandleResult.Return, isChange = true });
                }
            </div>
            <div class="search-label">
                <label>
                    @Resources.ORD.OrderMaster.OrderMaster_Flow
                </label>
            </div>
            <div class="search-field">
                @{
    Html.RenderAction("_FlowComboBox", "Common", new { controlName = "Flow", type = (int)com.Sconit.CodeMaster.OrderType.Procurement });
                }
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.Global.Button_New, "Url_RejectOrder_Return", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnReturn"},
                    {"needconfirm","true"},
                    {"onclick","onSubmit()"}
	            })
        </div>
    </fieldset>
   
    <div id="fdReturnDetail" style="display: none;">
    </div>
   
}
