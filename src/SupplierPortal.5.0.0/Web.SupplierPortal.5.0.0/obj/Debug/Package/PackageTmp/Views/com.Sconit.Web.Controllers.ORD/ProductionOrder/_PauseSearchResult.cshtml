@model IEnumerable<com.Sconit.Entity.ORD.OrderMaster>
<script type="text/javascript">

    function OrderMasterGrid_OnDataBinding(e) {
        e.data = {
            OrderNo: $('#OrderNo').val(),
            TraceCode: $('#TraceCode').val(),
            Flow: $('#Flow').val(),
            DateFrom: $('#DateFrom').val(),
            DateTo: $('#DateTo').val(),
            CreateUserName: $('#CreateUserName').val(),
            IsPause: $("#IsPause").is(':checked')
        };
    }

    function popPause(e) {
        var data = {
            "orderNo": $("#PauseOrderNo").val(),
            "pauseOperation": $("#PauseOperation-input").val()
        };
        $.ajax({
            type: "post",
            dataType: "json",
            url: "@Url.Content("~/ProductionOrder/Pause/")",
            data: data,
            cache: false,
            success: function (data) {
                DisplayJsonMessages(data);
                //$('#PauseOrder').data('tWindow').close();
                ReturnView();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }
    function PopPauseOrderClick(e) {
        $(e).attr("href", "#");
        if (confirm("确定要暂停吗？")) {
            var status = $(e).parent().parent().children().eq(15).text();
            //            var orderNo = $(e).parent().parent().children().eq(0).text();
            var orderNo = $(e).parent().parent().children().eq(0).children().eq(0).val();
            if (status == 1) {
                //Submit
                $.ajax({
                    type: "post",
                    dataType: "json",
                    url: "@Url.Content("~/ProductionOrder/PopPauseOrder/")",
                    data: { orderNo: orderNo },
                    cache: false,
                    success: function (data) {
                        DisplayJsonMessages(data);
                        ReturnView();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        DisplayTextMessages(XMLHttpRequest.responseText);
                    }
                });
            }
            else if (status == 2) {
                //InProcess
                var data = {
                    controlName: "PauseOperation",
                    orderNo: orderNo
                };
                $.ajax({
                    type: "post",
                    dataType: "html",
                    url: "@Url.Content("~/Common/_OrderOperationDropDownList/")",
                    data: data,
                    success: function (data, textStatus) {
                        $("#OperationDiv").html(data);
                    }
                });
                $("#popPauseErrorsul").html('');
                var detailWindow = $("#PauseOrder").data("tWindow");
                $("#routing").find("input#PauseOrderNo").val(orderNo);
                detailWindow.center().open();
            }
        }
    }

    function ReturnView() {
        $.ajax({
            type: "post",
            dataType: "html",
            url: "@Url.Content("~/ProductionOrder/PauseList/")",
            cache: false,
            data: { OrderNo: $('#OrderNo').val(), Flow: $('#Flow').val(), TraceCode: $("#TraceCode").val() },
            success: function (data, textStatus) {
                var $tGrid = $("#content");
                $($tGrid).html(data);
            }
        });
    }

    function OrderOperation_DataBinding(e) {
    }
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            showButtons();
        });
    });

    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
        $("#btnPrint").attr("style", $("input[name='checkedRecords']:checked").length > 0 ? "display:inline" : "display:none");
    }
</script>
<form id="pauseListForm" action="/ProductionOrder/PauseList" target="_self" />
<fieldset>
    @(Html.Telerik().Grid(Model)
        .Name("OrderMasterGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.OrderNo);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.OrderNo)
                   .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= OrderNo #>' onClick='showButtons()'  />")
                   .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
                   .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.OrderNo);
            columns.Bound(o => o.Flow).Title(@Resources.ORD.OrderMaster.OrderMaster_Flow_Production);
            columns.Bound(o => o.Sequence).Sortable(false);
            columns.Bound(o => o.ReferenceOrderNo);
            columns.Bound(o => o.ExternalOrderNo);
            columns.Bound(o => o.TraceCode);
            columns.Bound(o => o.OrderPriorityDescription);
            columns.Bound(o => o.PartyFromName);
            columns.Bound(o => o.CurrentOperation);
            columns.Bound(o => o.StartTime);
            columns.Bound(o => o.WindowTime);
            columns.Bound(o => o.OrderStatusDescription);
            columns.Bound(o => o.CreateUserName);
            columns.Bound(o => o.CreateDate);
            columns.Bound(o => o.Status).Hidden();
            columns.Command(
                commands =>
                {
                    commands.Custom("Pause").Text("暂停")
                        .HtmlAttributes(new { onClick = "PopPauseOrderClick(this)", id = "PopPauseOrder", href = "#" });
                    //commands.Custom("Pause")
                    //    .Text("暂停")
                    //    .DataRouteValues(route => route.Add(o => o.OrderNo).RouteKey("orderNo"))
                    //    .Ajax(true)
                    //    .Action("PopPauseOrder", "ProductionOrder");
                    //commands.Custom("Resume")
                    // .Text("恢复")
                    // .DataRouteValues(route => route.Add(o => o.OrderNo).RouteKey("orderNo"))
                    // .Ajax(true)
                    // .Action("PopResumeOrder", "ProductionOrder");
                });
        })
        .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
        .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxPauseOrderList", "ProductionOrder"))
        .ClientEvents(events => events.OnDataBinding("OrderMasterGrid_OnDataBinding"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
    @{ Html.Telerik().Window()
        .Name("PauseOrder")
        .Title("暂停工序")
        .Draggable(true)
        .Scrollable(true)
        .Resizable()
        .Height(100)
        .Width(300)
        .Modal(true)
       .Content(@<text>
        <div class="search" id="routing">
            <div class="search-label">
                <label for="OrderMaster_Operation">
                    @Resources.ORD.OrderMaster.OrderMaster_Operation
                </label>
            </div>
            <div id="OperationDiv" class="search-field">
            </div>
            <div class="search-label">
            </div>
            <div class="search-field">
            </div>
            <div class="search-label">
            </div>
            <div class="search-field">
            </div>
            <div>
                <input id="PauseOrderNo" type="hidden" value="@ViewBag.orderNo" />
                <button type="button" id="btnPause" onclick="popPause();">
                    @Resources.Global.Button_Pause</button>
            </div>
        </div>
        </text>)
        .Visible(false)
        .Render();
    }
</fieldset>
</form>