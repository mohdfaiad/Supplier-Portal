@using com.Sconit.Web.Models.SearchModels.ORD
@using com.Sconit.Entity.ORD
<fieldset>
    @using (Html.BeginForm("List", "SupplierSortMaster"))
    {   
       <div class="search">
          <div class="search-label">
                <label for="OrderMaster_Flow">
                    @Resources.ORD.OrderMaster.OrderMaster_Flow
                </label>
            </div>
            <div class="search-field">
                @{
               Html.RenderAction("_FlowComboBox", "Common",
                   new
                   {
                       controlName = "Flow",
                       flowstrategy = (int)com.Sconit.CodeMaster.FlowStrategy.SEQ,
                       type = (int)com.Sconit.CodeMaster.OrderType.Procurement,
                       isSupplier = true,
                       selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Flow : string.Empty
                   });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.OrderMaster.OrderMaster_OrderNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("OrderNo", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).OrderNo : string.Empty)
            </div>
          
            <div class="search-label">
                <label for="OrderMaster_Pirority">
                    @Resources.ORD.OrderMaster.OrderMaster_Priority
                </label>
            </div>
            <div class="search-field">
                @{
               Html.RenderAction("_CodeMasterDropDownList", "Common", new
               {
                   code = com.Sconit.CodeMaster.CodeMaster.OrderPriority,
                   controlName = "Priority",
                   includeBlankOption = true,
                   selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Priority : null
               });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_Status">
                    @Resources.ORD.OrderMaster.OrderMaster_Status
                </label>
            </div>
            <div class="search-field">
                @{
               Html.RenderAction("_CodeMasterDropDownList", "Common", new
               {
                   code = com.Sconit.CodeMaster.CodeMaster.SupplierOrderStatus,
                   controlName = "Status",
                   includeBlankOption = true,
                   selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Status : null
               });
                }
            </div>
              <div class="search-label">
                <label for="OrderMaster_DateFrom">
                    创建日期 从
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker()
                .Format(com.Sconit.Entity.BusinessConstants.SHORT_DATE_FORMAT)
                .Name("DateFrom")
     .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateFrom : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                    至
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker()
                .Format(com.Sconit.Entity.BusinessConstants.SHORT_DATE_FORMAT)
                .Name("DateTo")
                .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateTo : null)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="editor-label-2">
                <label>
                    拨次
                </label>
            </div>
            <div class="editor-field-2">
                @Html.TextBox("TraceCode", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).TraceCode : string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                  
                </label>
            </div>
            <div class="search-field">
              显示未查看
                @Html.CheckBox("IsListPrice", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).IsListPrice : false)
                &nbsp&nbsp
                显示未打印
                @Html.CheckBox("IsPrintOrder", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).IsPrintOrder : false)
            </div>
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.Global.Button_Search</button>
          @*  <button type="button" id="btnExport" onclick="ExportClick()">
                @Resources.Global.Button_SearchExport</button>*@
                <button type="button" id="btnDetExport" onclick="ExportDetClick()" style="display:none" >
                @Resources.Global.Button_ExportDetail</button>
            <button type="button" id="btnPrint" onclick='PrintClick("@Url.Content("~/SupplierSortMaster/PrintOrders/")")' style="display:none" >
                @Resources.Global.Button_Print</button>
                <button type="button" id="btnExportPrint" onclick="ExportPrintClick()" style="display:none" >
                打印模板导出</button>
            <button type="button" id="btnComposePrint" onclick='PrintClick("@Url.Content("~/SupplierSortMaster/composePrintOrders/")")' style="display:none" >
                合并打印</button>
        </div>

    }
</fieldset>
<script type="text/javascript">
    function ExportDetClick() {
        var $checkRecords = $("input[name='checkedRecords']");
        var checkedOrderNos = "";
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                if (checkedOrderNos == "") {
                    checkedOrderNos = "'" + $checkRecords[i].value + "'";
                } else {
                    checkedOrderNos += ",'" + $checkRecords[i].value + "'";
                }
            }
        }

        if (checkedOrderNos == "") {
            alert('Must Check One');
            return;
        }
        location.href = "@Url.Content("~/SupplierSortMaster/ExportDetailXLS/?orderNos=")" + checkedOrderNos;

    }
    function PrintClick(url) {
        var $checkRecords = $("input[name='checkedRecords']");
        var checkedOrderNos = "";
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                if (checkedOrderNos == "") {
                    checkedOrderNos = $checkRecords[i].value;
                } else {
                    checkedOrderNos += "," + $checkRecords[i].value;
                }
            }
        }

        if (checkedOrderNos == "") {
            alert('Must Check One');
            return;
        }

        var data = {
            "orderNos": checkedOrderNos
        };
        $.ajax({
            type: "post",
            dataType: "text",
            data: data,
            async: false,
            url: url,
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                if (data != "") {
                    var printUrl = data.split('||');
                    for (var i = 0; i < printUrl.length; i++) {
                        if (printUrl[i] != "") {
                            PrintOrder(printUrl[i]);
                        }
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

    function ExportClick() {
        location.href = "@Url.Content("~/SupplierSortMaster/ExportMasterXLS/?OrderNo=")" + $('#OrderNo').val() + '&Flow=' + $('#Flow').val() + '&PartyFrom=' + $('#PartyFrom').val()
         + '&PartyTo=' + $('#PartyTo').val() + '&Priority=' + $('#Priority').val() + '&Status=' + $('#Status').val()
         + '&ExternalOrderNo=' + $('#ExternalOrderNo').val() + '&ReferenceOrderNo=' + $('#ReferenceOrderNo').val()
         + '&Item=' + $('#Item').val() + '&CreateUserName=' + $('#CreateUserName').val()
         + '&DateFrom=' + $('#DateFrom').val() + '&DateTo=' + $('#DateTo').val() + '&SequenceGroup=' + $('#SequenceGroup').val();
    }

    function ExportPrintClick() {
        var $checkRecords = $("input[name='checkedRecords']");
        var checkedOrderNos = "";
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                if (checkedOrderNos == "") {
                    checkedOrderNos = $checkRecords[i].value;
                } else {
                    checkedOrderNos += "," + $checkRecords[i].value;
                }
            }
        }

        if (checkedOrderNos == "") {
            alert('Must Check One');
            return;
        }

        var data = {
            "orderNos": checkedOrderNos
        };
        $.ajax({
            type: "post",
            dataType: "text",
            data: data,
            async: false,
            url: "@Url.Content("~/SupplierSortMaster/PrintOrders/")",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);
                if (data != "") {
                    var printUrl = data.split('||');
                    for (var i = 0; i < printUrl.length; i++) {
                        if (printUrl[i] != "") {
                            var url = printUrl[i].replace("//", "/");
                            url = url.replace("//", "/");
                            url = url.replace(":/", "://");
                            window.open(url, i + 1 + "", 'height=400,width=300,scrollbars=yes,status=yes')
                        }
                    }
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }
    </script>
