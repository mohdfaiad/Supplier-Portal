@using com.Sconit.Entity.ORD;
@model IEnumerable<com.Sconit.Entity.ORD.OrderDetail>
@*@model com.Sconit.Entity.ORD.SequenceDetail*@

<fieldset>

    <legend>@Resources.ORD.SequenceDetail.SequenceDetail_Title</legend>
    @(Html.Telerik().Grid(Model)
        .Name("EditSequenceDetail")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        //.Editable(editing => editing.Mode(GridEditMode.InCell))
        .ToolBar(commands =>
        {
            commands.Insert();
        })
        .Columns(columns =>
        {

            columns.Bound(o => o.Id).Hidden();
            columns.Bound(o => o.Sequence).ReadOnly();
            //columns.Bound(o => o.ExternalOrderNo).Title("Van号");
            columns.Bound(o => o.Item).ReadOnly().Hidden();
            columns.Bound(o => o.ItemCode).EditorTemplateName("ItemGridForeignKey").Width(200);
            columns.Bound(o => o.ReferenceItemCode).ReadOnly();
            columns.Bound(o => o.BinTo).Title("工位").ReadOnly();
            columns.Bound(o => o.OrderedQty);
            columns.Bound(o => o.ItemDescription).ReadOnly();
            columns.Bound(o => o.ManufactureParty).ReadOnly();
            columns.Bound(o => o.ICHARG).EditorTemplateName("ManufacturePartyGridComboBox").Width(200);
            columns.Command(commands =>
              {
                  commands.Edit();
                  commands.Delete();
              });
        })
        .DataBinding(dataBinding =>dataBinding.Ajax()
                        .Select("_SelectOrderDetail", "SupplierSortMaster", new { detId = ViewBag.DetailId })
                                .Update("_UpdateOrderDetail", "SupplierSortMaster", new { detId = ViewBag.DetailId })
                                .Insert("_InsertOrderDetail", "SupplierSortMaster", new { detId = ViewBag.DetailId })
                                .Delete("_DeleteOrderDetail", "SupplierSortMaster", new { detId = ViewBag.DetailId })
        )
                .ClientEvents(events => events.OnComplete("TelerikGridView_OnComplete"))
        .Scrollable(c => c.Enabled(false))
        .Footer(true)
    )
@*    <br />
<br />
    &nbsp<input type="button" value="返回" style="position:absolute;left:85%" onclick="location.href='@Url.Content("~/SequenceMaster/List")'" />
*@
</fieldset>
<script type="text/javascript">
    function onItemComboBoxChange(e) {
        if (e.value != null) {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            } else {
                var data = {
                    "itemCode": e.value
                };
                $.ajax({
                    type: "post",
                    dataType: "json",
                    url: "@Url.Content("~/SequenceMaster/_WebOrderDetail/")",
                    data: data,
                    success: function (data, textStatus) {

                        var $tGrid = $("#EditSequenceDetail").data("tGrid");
                        var $itemCell = $(e.target).parent().parent();
                        $itemCell.next().html(data.ReferenceCode);
                        $itemCell.prev().text(e.value);
                        $itemCell.next().next().next().next().html(data.Description);

                        var oldData = $tGrid.dataItem($itemCell.parent());
                        if (oldData != undefined) {
                            oldData.ReferenceItemCode = data.ReferenceCode;
                            oldData.ItemDescription = data.Description;
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
                });
            }
        }
    }

    function onManufacturePartyDataBinding(e) {
        e.data = {
            "item": $(e.target).parent().parent().parent().children().eq(2).text()
        }
    }

    function onManufacturePartyChange(e) {
        if (e.value != null) {
            var combobox = $(this).data("tComboBox");
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            }
        } 
    }
</script>
