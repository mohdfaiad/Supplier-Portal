@model com.Sconit.Entity.MD.Location
@{
    ViewBag.Title = "Edit Location";
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Location_View" });
}
<form action="@Url.Content("~/location/Edit")" method="post">
<fieldset>
    <legend>@Resources.MD.Location.Location_Edit_Title</legend>
    <div class="editor">
        @Html.HiddenFor(model => model.Code)
        @Html.HiddenFor(model => model.CreateUserName)
        @Html.HiddenFor(model => model.CreateDate)
        @Html.HiddenFor(model => model.LastModifyUserName)
        @Html.HiddenFor(model => model.LastModifyDate)
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field-2">
            @Html.DisplayFor(model => model.Code)
        </div>
        @*<div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                @{
           Html.RenderAction("_CodeMasterDropDownList", "Common", new
           {
               code = com.Sconit.CodeMaster.CodeMaster.LocationType,
               controlName = "Type",
               selectedValue = (int)Model.Type
           });
                }
                @Html.ValidationMessageFor(model => model.Type)
            </div>*@
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
         <div class="editor-label-2">
            @Html.LabelFor(model => model.Plant)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.Plant)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.SAPLocation)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.SAPLocation)
            @Html.ValidationMessageFor(model => model.SAPLocation)
        </div>
       
        <div class="editor-label-2">
            @Html.LabelFor(model => model.IsActive)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.IsActive)
        </div>
        
    </div>
    <div class="editor-footer">
        @*<input type="submit" id="btnSave" value="@Resources.Global.Button_Save" />
            <button type="button" id="btnDelete" onclick="location.href='@Url.Content("~/Location/Delete/" + @Model.Code)'">
                @Resources.Global.Button_Delete</button>*@
        @Html.Button(Resources.Global.Button_Save, "Url_Location_Edit", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnSave"},
        {"needconfirm","true"}
	})
        @Html.Button(Resources.Global.Button_Delete, "Url_Location_Delete", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnDelete"},
        {"needconfirm","true"},
        {"onclick","location.href='"+@Url.Content("~/Location/Delete/"+@Model.Code)+"'"}
    })
        <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/Location/List")'">
            @Resources.Global.Button_Back</button>
    </div>
</fieldset>
</form>


@*<input type="hidden" name="LocationCode" id="LocationCode" value="@Model" />
@{ Html.Telerik().TabStrip()
        .Name("TabStrip")
        .Items(tabstrip =>
        {
            tabstrip.Add()
               .Text(Resources.MD.Location.Location_Tab_Title)
               .LoadContentFrom("_Edit", "Location", new { id = Model })
               .HtmlAttributes(new { onclick = "CleanTabMessage()" });
               
            //tabstrip.Add()
            //    .Text(Resources.MD.LocationArea.LocationArea_Tab_Title)
            //    .LoadContentFrom("_LocationArea", "Location", new { id = Model })
            //    .HtmlAttributes(new { onclick = "CleanTabMessage()" });

            //tabstrip.Add()
            //    .Text(Resources.MD.LocationBin.LocationBin_Tab_Title)
            //    .LoadContentFrom("_LocationBin", "Location", new { id = Model })
            //    .HtmlAttributes(new { onclick = "CleanTabMessage()" });
        })
        .Render();
}

@{ Html.Telerik().ScriptRegistrar()
        .OnDocumentReady(
            @<text>
                var tabIndex = "@TempData["TabIndex"]";
                var tabstrip = $("#TabStrip").data("tTabStrip");
                var item = $("li", tabstrip.element)[tabIndex != "" ? tabIndex : 0];
                tabstrip.select(item);
            </text>
        );
}*@
