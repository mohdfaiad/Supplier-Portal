@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.MD.Item
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Item_View" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MD.Item.Item_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
            <div class="editor-label-2">
            </div>
            <div class="editor-field-2">
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ReferenceCode)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.ReferenceCode)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Uom)
            </div>
            <div class="editor-field-2">
                @{
           Html.RenderAction("_UomDropDownList", "Common", new { controlName = "Uom" });
                }
                @Html.ValidationMessageFor(model => model.Uom)
            </div>
              <div class="editor-label-2">
                @Html.LabelFor(model => model.UnitCount)
            </div>
            <div class="editor-field-2">
                 @Html.Telerik().NumericTextBoxFor(model => model.UnitCount).DecimalDigits(0).MinValue(1)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemCategory)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_ItemCategoryDropDownList", "Common", new { controlName = "ItemCategory" });
                }
                @Html.ValidationMessageFor(model => model.ItemCategory)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Location)
            </div>
            <div class="editor-field-2">
                @{
                   Html.RenderAction("_LocationComboBox", "Common", new
                   {
                       controlName = "Location"
                   });
                }
                @Html.ValidationMessageFor(model => model.Location)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Bom)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_BomComboBox", "Common", new { controlName = "Bom" });
                }
                @Html.ValidationMessageFor(model => model.Bom)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Routing)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_RoutingComboBox", "Common", new
                    {
                        controlName = "Routing"
                    });
                }
                @Html.ValidationMessageFor(model => model.Routing)
            </div>
          
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Warranty)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.Warranty).DecimalDigits(0).MinValue(0)
                @Resources.MD.Item.Item_Day
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.WarnLeadTime)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.WarnLeadTime).DecimalDigits(0).MinValue(0)
                @Resources.MD.Item.Item_Day
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsActive", true)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsPurchase)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsPurchase", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsSales)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsSales", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsManufacture)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsManufacture", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsSubContract)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsSubContract", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsCustomerGoods)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsCustomerGoods", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsVirtual)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsVirtual", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsKit)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsKit", false)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.NotBackFlush)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("NotBackFlush", false)
            </div>
        </div>
        <div class="editor-footer">
            <button type="submit" id="btnNew">
                @Resources.Global.Button_New</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/Item/List")'">
                @Resources.Global.Button_Back</button>
        </div>
    </fieldset>
}