@using com.Sconit.Web.Models.SearchModels.MD

<fieldset>
    @using (Html.BeginForm("List", "Plant"))
    {   
        <div class="search">
            <div class="search-label">
                <label for="Supplier_Code">
                    @Resources.MD.Party.Party_Supplier_Code
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("Code", TempData["PartySearchModel"] != null ? ((PartySearchModel)TempData["PartySearchModel"]).Code : string.Empty)
            </div>
            <div class="search-label">
                <label for="Supplier_Name">
                    @Resources.MD.Party.Party_Supplier_Name
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("Name", TempData["PartySearchModel"] != null ? ((PartySearchModel)TempData["PartySearchModel"]).Name : string.Empty)
            </div>
            @* <div class="search-label">
                <label for="Supplier_Name">
                    @Resources.MD.Party.Party_Supplier_ShortCode
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("ShortCode", TempData["PartySearchModel"] != null ? ((PartySearchModel)TempData["PartySearchModel"]).ShortCode : string.Empty)
            </div>*@
        </div>
        <div class="search-footer">
         @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.Global.Button_Search</button>
                 @Html.Button(Resources.Global.Button_New, "Url_Plant_New", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnNew"},
                    {"onclick","location.href='"+@Url.Content("~/Plant/New/") +"'"}
	            })
        </div>
    }
</fieldset>


